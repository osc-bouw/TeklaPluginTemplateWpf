<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Model.Common</name>
    </assembly>
    <members>
        <member name="T:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1" /> class represents a manipulator for dragging the faces.
            </summary>
            <typeparam name="TModelObject">The type of the model object.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1" /> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.Faces">
            <summary>
            Gets the faces.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.GetFaces">
            <summary>
            Gets the faces.
            </summary>
            <returns>The faces.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnFaceChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>
            Called when the location changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">
            The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.Validate(Tekla.BIM.Geometry.Face3)">
            <summary>
            Validates if the <paramref name="face"/> is valid.
            </summary>
            <param name="face">The face.</param>
            <returns>A value indicating whether the <paramref name="face"/> is valid..</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnInitialize(Tekla.BIM.DirectManipulation.Services.Interaction.IFaceHandle)">
            <summary>
            Called when initalizing the <paramref name="faceHandle"/>.
            </summary>
            <param name="faceHandle">The face handle.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.UpdateView(System.Collections.Generic.ICollection{Tekla.BIM.Geometry.Face3})">
            <summary>
            Updates the view based on the <paramref name="faces"/>.
            </summary>
            <param name="faces">The faces.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnHighlightChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Called when the highlight changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnSelectionChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleSelectionEventArgs)">
            <summary>
            Called when the selection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnDragStarted(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Called when the drag started.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">
            The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.OnDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Called when the drag ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">
            The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.CreateFaceHandles(System.Collections.Generic.ICollection{Tekla.BIM.Geometry.Face3})">
            <summary>
            Creates the face handles.
            </summary>
            <param name="faces">The faces of the contour plate.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.CreateFaceHandle(Tekla.BIM.Geometry.Face3,System.Int32)">
            <summary>
            Creates one face handle.
            </summary>
            <param name="face">The face to create the handle for.</param>
            <param name="index">The index of the face in <see cref="P:Tekla.Structures.Features.Common.FaceManipulation.FaceDraggingManipulator`1.Faces"/>.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic"/> class provides the preview graphic for extrema boxes.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.#ctor(Tekla.Common.Geometry.AxisAlignedBox3,Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic"/> class.
            </summary>
            <param name="extremaBox">The extrema box.</param>
            <param name="rotation">The rotation.</param>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.#ctor(Tekla.Common.Geometry.Segment3,System.Double,System.Double,Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic"/> class.
            </summary>
            <param name="direction">The direction.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="rotation">The rotation.</param>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="offsetVector">The offset vector.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.ExtremaBox">
            <summary>
            Gets the extrema box.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.BoundingBox">
            <summary>
            Gets the bounding box.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.UpdateEdges">
            <summary>
            Updates the geometry edges based on the <see cref="P:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.ExtremaBox"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.GetHorizontalLoopEdges(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the horizontal edges from the <paramref name="centerPoint"/>.
            </summary>
            <param name="centerPoint">The start point.</param>
            <returns>The vertical edges for the <see cref="P:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.BoundingBox"/> from the <paramref name="centerPoint"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.GetVerticalEdges(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the vertical edges from the <paramref name="centerPoint"/>.
            </summary>
            <param name="centerPoint">The center point.</param>
            <returns>The vertical edges for the <see cref="P:Tekla.Structures.Features.Common.Graphics.ExtremaBoxGraphic.BoundingBox"/> from the <paramref name="centerPoint"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic"/> class provides the base class for the geometry preview graphics.
            </summary>
            <seealso cref="T:Tekla.BIM.DirectManipulation.Services.Graphics.AdvancedGraphic" />
        </member>
        <member name="F:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.curveType">
            <summary>
            The <see cref="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.CurveType"/> to draw the graphic with.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.orientation">
            <summary>
            The orientation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.rotation">
            <summary>
            The rotation.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.#ctor(System.Nullable{Tekla.Common.Geometry.Segment3},Tekla.Common.Geometry.Angle,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic"/> class.
            </summary>
            <param name="direction">The direction orienting the shape, if applicable.</param>
            <param name="rotation">The rotation angle around the <paramref name="direction"/>.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.CurveType">
            <summary>
            Gets or sets the <see cref="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.CurveType"/> to draw the graphics by.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.MaxEdges">
            <summary>
            Gets or sets the maximum number of edges to be drawn.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.Graphics">
            <summary>
            Gets the graphics context for the current graphic instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.GetGeometryEdges">
            <summary>
            Gets the geometry edges.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.OnInitialize(Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsDrawerService)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.UpdateView">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.Rotate(Tekla.Common.Geometry.Segment3)">
            <summary>
            Rotates the specified <paramref name="segment"/> by <see cref="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.Rotation"/> angle, if possible.
            </summary>
            <param name="segment">The segment.</param>
            <returns>The rotated segment.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.GetSimplifiedGraphics``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets the simplified graphics so that the number of primitive graphics do not exceed the <see cref="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.MaxEdges"/>.
            </summary>
            <typeparam name="T">The type of the geometry graphic.</typeparam>
            <param name="geometry">The geometry.</param>
            <returns>The simplified graphics so that the number of primitive graphics do not exceed the <see cref="P:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic.MaxEdges"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase"/> class provides the base class for all the preview graphics.
            </summary>
            <seealso cref="T:Tekla.Structures.Features.Common.Graphics.GeometryPreviewGraphic" />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.#ctor(System.Nullable{Tekla.Common.Geometry.Segment3},Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase"/> class.
            </summary>
            <param name="direction">The direction defines the placement and orientation of the preview in respect to the current coordinate system.</param>
            <param name="rotation">The rotation of the preview over the axis of the direction vector.</param>
            <param name="coordinateSystem">The current coordinate system.</param>
            <param name="offsetVector">The offset vector for the preview.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.CoordinateSystem">
            <summary>
            Gets the coordinate system.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.OffsetVector">
            <summary>
            Gets the offset vector.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.Edges">
            <summary>
            Gets or sets the edges.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.UpdateView">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.GetGeometryEdges">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.PreviewGraphicsBase.Rotate(Tekla.Common.Geometry.Segment3)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.ProfileGraphic">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.ProfileGraphic"/> class provides the preview graphic for profile.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ProfileGraphic.#ctor(System.String,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.ProfileGraphic"/> class.
            </summary>
            <param name="profile">The profile.</param>
            <param name="direction">The direction.</param>
            <param name="rotation">The rotation.</param>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="offsetVector">The offset vector.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.ProfileGraphic.Profile">
            <summary>
            Gets the profile.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ProfileGraphic.GetGeometryEdges">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic"/> class provides the preview graphic for custom parts from the Catalog.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic.customPartEdges">
            <summary>
            The segments composing the custom part geometry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic.#ctor(System.String,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic"/> class.
            </summary>
            <param name="customPart">The custom part.</param>
            <param name="direction">The direction.</param>
            <param name="rotation">The rotation.</param>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="offsetVector">The offset vector.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.CustomPartGraphic.CustomPart">
            <summary>
            Gets the custom part.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Graphics.ShapeGraphic">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Graphics.ShapeGraphic"/> class provides the preview graphic for shapes from the Shape Catalog.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ShapeGraphic.#ctor(System.String,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Angle,Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Graphics.ShapeGraphic"/> class.
            </summary>
            <param name="shape">The shape.</param>
            <param name="direction">The direction.</param>
            <param name="rotation">The rotation.</param>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="offsetVector">The offset vector.</param>
            <param name="curveType">Type of the curve.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Graphics.ShapeGraphic.Shape">
            <summary>
            Gets the profile.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Graphics.ShapeGraphic.GetGeometryEdges">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider"/> class provides the applied attribute values for items from TS dialog.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider.provider">
            <summary>
            The provider.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider.#ctor(Tekla.Structures.ObjectProperties.Contracts.IAppliedAttributesObjectPropertiesFactory,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider" /> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="typeName">Name of the type.</param>
            <exception cref="T:System.ArgumentNullException">factory</exception>
            <exception cref="T:System.ArgumentException">typeName</exception>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider.TypeName">
            <summary>
            Gets the name of the type.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider.GetProfile">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepAppliedAttributesProvider.ApplyValues(Tekla.Structures.Model.Brep)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Item.BrepProperties">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Item.BrepProperties"/> class enables the accessing of properties of a brep item being placed.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Item.BrepProperties.item">
            <summary>
            The inserted item. Used for subsequent modify.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Item.BrepProperties.provider">
            <summary>
            The provider.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Item.BrepProperties.AdjustPositionString">
            <summary>
            The adjust position string.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.#ctor(Tekla.Structures.Features.Common.Item.IBrepAppliedAttributesProvider,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Item.BrepProperties" /> class.
            </summary>
            <param name="provider">The provider.</param>
            <param name="creationCommandId">The creation command identifier.</param>
            <exception cref="T:System.ArgumentException">Invalid profile provider</exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.#ctor(Tekla.Structures.Model.Brep,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Item.BrepProperties" /> class.
            </summary>
            <param name="item">The item.</param>
            <param name="creationCommandId">The creation command identifier.</param>
            <exception cref="T:System.ArgumentNullException">item</exception>
            <exception cref="T:System.ArgumentException">Invalid profile provider</exception>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Item.BrepProperties.ModelObject">
            <inheritdoc />
        </member>
        <member name="P:Tekla.Structures.Features.Common.Item.BrepProperties.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Tekla.Structures.Features.Common.Item.BrepProperties.StartPoint">
            <inheritdoc />
        </member>
        <member name="P:Tekla.Structures.Features.Common.Item.BrepProperties.EndPoint">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.Select">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.GetShape">
            <summary>
            Gets the shape item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.InsertItem">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.GetStartPoint(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets or sets the start point.
            </summary>
            <param name="item">Gets the start point.</param>
            <returns>The start point.</returns>
            <value>
            The start point.
            </value>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.ModifyItem">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.SelectBrepType(System.String)">
            <summary>
            Selects the shape type data from core.
            </summary>
            <param name="profile">The profile.</param>
            <returns>The <see cref="T:Tekla.Structures.Catalogs.ShapeItem" /> for <paramref name="profile" />.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.UpdateTarget(Tekla.Structures.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.SetItem(Tekla.Structures.Model.ModelObject)">
            <summary>
            Sets the item.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.GetAdjustPositionString">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.SelectPreviewExtrema(Tekla.Structures.Geometry3d.AABB)">
            <summary>
            Selects the extrema of the item to insert.
            </summary>
            <param name="brepTypeExtrema">The <see cref="T:Tekla.Structures.Geometry3d.AABB"/> value to set the extrema from.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.BrepProperties.SelectPreviewGeometry(Tekla.Structures.Geometry3d.FacetedBrep)">
            <summary>
            Selects the preview geometry of the item.
            </summary>
            <param name="shapeFacetedBrep">The shape faceted brep.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Item.IBrepAppliedAttributesProvider">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Item.IBrepAppliedAttributesProvider"/> interfaces the applied attribute values provider for items.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.IBrepAppliedAttributesProvider.GetProfile">
            <summary>
            Gets profile.
            </summary>
            <returns>The profile.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Item.IBrepAppliedAttributesProvider.ApplyValues(Tekla.Structures.Model.Brep)">
            <summary>
            Applies values.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.MatrixExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.MatrixExtensions"/> class provides a set of extension methods for the <see cref="T:Tekla.Structures.Geometry3d.Matrix"/> type.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.MatrixExtensions.ToUnitX(Tekla.Structures.Geometry3d.Matrix)">
            <summary>
            Gets the unit vector in X-direction of the transformation matrix.
            </summary>
            <param name="matrix">The transformation matrix.</param>
            <returns>The unit vector in Z-direction of the transformation matrix.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.MatrixExtensions.ToUnitY(Tekla.Structures.Geometry3d.Matrix)">
            <summary>
            Gets the unit vector in Y-direction of the transformation matrix.
            </summary>
            <param name="matrix">The transformation matrix.</param>
            <returns>The unit vector in Z-direction of the transformation matrix.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.MatrixExtensions.ToUnitZ(Tekla.Structures.Geometry3d.Matrix)">
            <summary>
            Gets the unit vector in Z-direction of the transformation matrix.
            </summary>
            <param name="matrix">The transformation matrix.</param>
            <returns>The unit vector in Z-direction of the transformation matrix.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.InputPointType">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.InputPointType"/> enum defines the type of model object inputs.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.InputPointType.OnePoint">
            <summary>
            Picking only once.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.InputPointType.TwoPoints">
            <summary>
            Picking twice.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions"/> class provides extension methods for the
            <see cref="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions.MatchesContourPoints(Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> matches the contour points.
            </summary>
            <param name="contourPlateModifier">The contour plate modifier.</param>
            <param name="face">The face to check.</param>
            <returns>
            True if the face matches the contour points. Otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions.IsTopFace(Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is the top face.
            </summary>
            <param name="contourPlateModifier">The contour plate modifier.</param>
            <param name="face">The face to check.</param>
            <returns>
            True if the face is the top face. Otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions.IsBottomFace(Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is the bottom face.
            </summary>
            <param name="contourPlateModifier">The contour plate modifier.</param>
            <param name="face">The face to check.</param>
            <returns>
            True if the face is the bottom face. Otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions.ContainsTopPoints(Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> contains top contour points.
            </summary>
            <param name="contourPlateModifier">The contour plate modifier.</param>
            <param name="face">The face to check.</param>
            <returns>
            True if the face contains top contour points. Otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifierExtensions.ContainsBottomPoints(Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> contains bottom contour points.
            </summary>
            <param name="contourPlateModifier">The contour plate modifier.</param>
            <param name="face">The face to check.</param>
            <returns>
            True if the face contains bottom contour points. Otherwise, false.
            </returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier"/> class provides methods for modifying a contour plate.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.plate">
            <summary>
            The plate to modify.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.profileValue">
            <summary>
            The profile value as a double.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.upsideDirection">
            <summary>
            The direction of the upside of the plate.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.profilePrefix">
            <summary>
            The prefix, if any, of the profile string.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.#ctor(Tekla.Structures.Model.ContourPlate,System.Collections.Generic.ICollection{Tekla.BIM.Geometry.Face3})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier"/> class.
            </summary>
            <param name="plate">The plate to modify.</param>
            <param name="faces">The faces of the contour plate.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when the profile string of the given <paramref name="plate"/> cannot be converted to a double.
            </exception>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.TopPoints">
            <summary>
            Gets the top contour points.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.BottomPoints">
            <summary>
            Gets the bottom contour points.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.TranslateFace(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,Tekla.Structures.Model.Position.DepthEnum)">
            <summary>
            Moves the given <paramref name="face"/> according to the given <paramref name="translation"/>.
            </summary>
            <param name="face">The face that should be moved.</param>
            <param name="translation">The translation to apply.</param>
            <param name="depthPosition">The depth position of the target object.</param>
            <returns>True if the face has been moved.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.Offset(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves one of the end points of <paramref name="selectedSegment"/>. The <paramref name="otherSegment"/>
            on the other side of <paramref name="point"/> is also taken into account, unless the translated
            <paramref name="selectedSegment"/> is parallel to <paramref name="otherSegment"/>.
            </summary>
            <param name="point">
            The point to offset. The point is one of the end points of <paramref name="selectedSegment"/>
            and also one of the end points of <paramref name="otherSegment"/>. That means the point is the
            intersection point of <paramref name="selectedSegment"/> and <paramref name="otherSegment"/>.
            </param>
            <param name="selectedSegment">The selected segment.</param>
            <param name="otherSegment">
            The segment on the other side of <paramref name="point"/> and <paramref name="selectedSegment"/>.
            </param>
            <param name="translation">The translation to apply.</param>
            <returns>
            The new location of <paramref name="point"/> after applying the given <paramref name="translation"/>.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.GetContourEdgePointIndices(Tekla.BIM.Geometry.Face3,System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3})">
            <summary>
            Try to get the pair of indices to the plate contour points which lie on the face being dragged.
            If more than one pair is found then find the pair nearest to the face.
            This method will be incorrect when used for top or bottom faces.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> face being dragged.</param>
            <param name="contourPoints">The list of vertices of the plate contour.</param>
            <returns>The pair of indices to the contour matching the face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.StoreContourPoints(System.Collections.Generic.ICollection{Tekla.BIM.Geometry.Face3})">
            <summary>
            Fills <see cref="P:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.TopPoints"/> with the top face contour points and <see cref="P:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.BottomPoints"/> with
            the bottom face contour points.
            </summary>
            <param name="faces">The faces of the contour plate.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.MoveLikeASegment(System.Int32,System.Int32,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves a side face in the same way as segment handles of contour plates do.
            The given <paramref name="firstPointIndex"/> and <paramref name="secondPointIndex"/>
            are the indices of the two contour points that are on the side face. So the points
            represent the end points of a segment that is on the edge of the contour plate's top face.
            </summary>
            <param name="firstPointIndex">The index of the first point to move.</param>
            <param name="secondPointIndex">The index of the second point to move.</param>
            <param name="translation">The translation to apply.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.ModifyProfileFromTop(Tekla.Common.Geometry.Vector3,Tekla.Structures.Model.Position.DepthEnum)">
            <summary>
            Updates the contour points and the profile (thickness) of the contour plate.
            The contour points are updated if they are located at depth position behind.
            </summary>
            <param name="translation">The translation to apply.</param>
            <param name="depthPosition">The depth position of the target object.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.ModifyProfileFromBottom(Tekla.Common.Geometry.Vector3,Tekla.Structures.Model.Position.DepthEnum)">
            <summary>
            Updates the contour points and the profile (thickness) of the contour plate.
            The contour points are updated if they are located at depth position front.
            </summary>
            <param name="translation">The translation to apply.</param>
            <param name="depthPosition">The depth position of the target object.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlateModification.ContourPlateModifier.GetContourPoint(System.Int32)">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Model.ContourPoint"/> that matches the given <paramref name="index"/>.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The retrieved <see cref="T:Tekla.Structures.Model.ContourPoint"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.CircularLinkedListExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.CircularLinkedListExtensions"/> class provides a set of extension methods for accessing a <see cref="T:System.Collections.Generic.LinkedList`1"/> as a circular list.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.CircularLinkedListExtensions.Next``1(System.Collections.Generic.LinkedListNode{``0})">
            <summary>
            Gets the next node in the <see cref="T:System.Collections.Generic.LinkedListNode`1"/>.
            If <paramref name="current"/> is the last item in the list, then <see cref="P:System.Collections.Generic.LinkedList`1.First"/> is returned.
            </summary>
            <typeparam name="T">Specifies the element type of the linked list.</typeparam>
            <param name="current">The <see cref="T:System.Collections.Generic.LinkedListNode`1"/> to get the next element from.</param>
            <returns>A reference to the next node in the <see cref="T:System.Collections.Generic.LinkedList`1"/>, or <see cref="P:System.Collections.Generic.LinkedList`1.First"/> if the current node is the last element.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.CircularLinkedListExtensions.Previous``1(System.Collections.Generic.LinkedListNode{``0})">
            <summary>
            Gets the previous node in the <see cref="T:System.Collections.Generic.LinkedListNode`1"/>.
            If <paramref name="current"/> is the first item in the list, then <see cref="P:System.Collections.Generic.LinkedList`1.Last"/> is returned.
            </summary>
            <typeparam name="T">Specifies the element type of the linked list.</typeparam>
            <param name="current">The <see cref="T:System.Collections.Generic.LinkedListNode`1"/> to get the previous element from.</param>
            <returns>A reference to the previous node in the <see cref="T:System.Collections.Generic.LinkedList`1"/>, or <see cref="P:System.Collections.Generic.LinkedList`1.Last"/> if the current node is the first element.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2"/> class is the base class for any manipulator targeted at modifying closed polygonal objects.
            </summary>
            <seealso cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2"/>
            <typeparam name="TModelObject">The type of <see cref="T:Tekla.Structures.Model.ModelObject"/> manipulated by the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2"/>.</typeparam>
            <typeparam name="TPoint">The <see cref="T:Tekla.Structures.Geometry3d.Point"/> type defining the vertex points of <typeparamref name="TModelObject"/>.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2"/> class.
            </summary>
            <param name="target">The <typeparamref name="TModelObject"/> to manipulate.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool"/> class provides a <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl"/>
            for switching the visibility of mid-point-handles allowing vertex insertion from the middle point of segments.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.Identifier">
            <summary>
            The identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.ToolType">
            <summary>
            Gets the type of the tool.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.ContextualSession">
            <summary>
            Gets or sets the contextual session.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.CreateNewControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Creates the new controls.
            </summary>
            <param name="targetNode">The target node.</param>
            <returns>The created controls.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.OnShowAddPointHandles(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Called when the <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl"/> was clicked.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.AllowVertexInsertionTool.SwitchInsertionPoint(System.Boolean,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration)">
            <summary>
            The switch insertion point.
            </summary>
            <param name="on">
            The on.
            </param>
            <param name="loopNodeConfiguration">
            The loop node configuration.
            </param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool">
            <summary>
            The contextual tools for chamfer properties.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.doCommitToModel">
            <summary>
            A delegate to the method that commits changes to the model.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.chamferList">
            <summary>
            The chamfer list.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.valueBoxX">
            <summary>
            The x value box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.valueBoxY">
            <summary>
            The y value box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.valueBoxDz1">
            <summary>
            The dz1 value box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.valueBoxDz2">
            <summary>
            The dz2 value box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.targetNode">
            <summary>
            The target vertex node.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.#ctor(System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool"/> class.
            </summary>
            <param name="doCommitToModel">The method used to commit data to model.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.ToolType">
            <summary>
            Gets the type of the tool.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.SupportDzValues">
            <summary>
            Gets or sets a value indicating whether DZ values are supported.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.DisableLineAndArc">
            <summary>
            Gets or sets a value indicating whether the chamfer properties are for a polybeam
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.DisableArcPoint">
            <summary>
            Gets or sets a value indicating whether the chamfer properties are for a bent plate.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.CreateNewControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Creates the new controls.
            </summary>
            <param name="targetNode">The target node.</param>
            <returns>The created controls.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.CreateChamfer(System.Double,System.Double,System.Double,System.Double,Tekla.Structures.Model.Chamfer.ChamferTypeEnum)">
            <summary>
            Creates a new chamfer with given data
            </summary>
            <param name="x">X value</param>
            <param name="y">Y value</param>
            <param name="dz1">DZ1 value</param>
            <param name="dz2">DZ2 value</param>
            <param name="type">Chamfer type</param>
            <returns>New chamfer with given data</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.UpdateChamfer(Tekla.Structures.Model.Chamfer,Tekla.Structures.Model.Chamfer)">
            <summary>
            Updates chamfer data
            </summary>
            <param name="oldChamfer">old chamfer</param>
            <param name="newChamfer">new chamfer</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.Initialize">
            <summary>
            Initializes the controls for the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.PopulateControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            The populate controls.
            </summary>
            <param name="loopNode">The target node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.SelectChamferType(Tekla.Structures.Model.Chamfer.ChamferTypeEnum)">
            <summary>
            The select chamfer type.
            </summary>
            <param name="chamfer">The chamfer type.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.GetSelectedChamferType">
            <summary>
            The get selected chamfer type.
            </summary>
            <returns>
            The selected chamfer type.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.ChamferListStateChanged(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            The chamfer list state changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.UpdateToolsVisibility">
            <summary>
            Updates the tools visibility.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.ApplyChanges(Tekla.Structures.Model.Chamfer)">
            <summary>
            Applies the changes to the chamfer.
            </summary>
            <param name="newChamfer">The new chamfer.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ChamferPropertiesTool.ValueBoxStateChanged(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            The value box state changed.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1"/> provides the abstract base class for the contextual tools utilizing manipulator resources.
            </summary>
            <typeparam name="TNode">The type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> targeted by the tool.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1"/> class.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.Accelerator">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.Keys"/> accelerator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.ToolType">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> describing the result of executing the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.CreateNewControls(`0)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instance for interacting with the tool from the <paramref name="targetNode"/>'s contextual tools.
            </summary>
            <param name="targetNode">The <typeparamref name="TNode"/> for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tools.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ManipulatorBasedTool`1.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool">
            <summary>
            The special container control for unwanted items.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.Identifier">
            <summary>
            The identifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.tooltip">
            <summary>
            The tooltip
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.#ctor(Tekla.BIM.DirectManipulation.Services.Localization.LocalizedString,Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool{Tekla.Structures.Features.Common.PolygonManipulation.LoopNode}[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool"/> class.
            </summary>
            <param name="tooltip">The tooltip.</param>
            <param name="controls">The controls.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.Accelerator">
            <summary>
            Gets the accelerator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.ToolType">
            <summary>
            Gets the tool type.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.ContextualSession">
            <summary>
            Gets or sets the contextual session.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.CreateNewControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase" /> instance for interacting with the tool from the <paramref name="targetNode" />'s contextual tools.
            </summary>
            <param name="targetNode">The node for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase" /> instances to add to the contextual tools.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ExpanderTool.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool"/> class provides a <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ButtonControl"/> for invoking a picker picking for a new end-vertex in an open loop polygon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.pickerAlgorithms">
            <summary>
            The set of algorithms to consider when finding a pick point.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.doCommitToModel">
            <summary>
            A delegate to the method that commits changes to the model.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.pickerSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/> that handles ongoing pick activities.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.#ctor(System.Object,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool"/> class.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="doCommitToModel">The method to call when commiting changes to the model.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithms">
            <summary>
            Gets the collection of algorithms that are considered when picking a new end vertex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.ToolType">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> describing the result of executing the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.CreateNewControls(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances for interacting with the tool from the <paramref name="targetNode"/>'s contextual tools.
            </summary>
            <param name="targetNode">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tool.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.CreatePickSession(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <summary>
            Creates a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/> that has <paramref name="referenceVertex"/> as the reference vertex.
            </summary>
            <param name="referenceVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> to use as the reference vertex for the session.</param>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/> that has <paramref name="referenceVertex"/> as the reference vertex.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.OnInitialize">
            <summary>
            Initializes the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.UpdateView">
            <summary>
            Updates the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.OnPickerSessionEnding(Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession,System.Boolean)">
            <summary>
            Handles end events of <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.pickerSession"/>.
            </summary>
            <param name="session">The ended session.</param>
            <param name="interrupted">A value indicating whether the session has ended by an interrupt.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.StartPickingForNewEndpoint(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <summary>
            Starts the picker for enabling the user to pick a new end point.
            </summary>
            <param name="targetNode">The node to tag the picker with.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache"/> class caches a collection of <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> types
            that can be copied to any given <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/>.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.algorithms">
            <summary>
            The collection of algorithms contained in the cache.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache"/> class.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.IAlgorithmDescriptor">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.IAlgorithmDescriptor"/> interface specifies a method
            that can add a described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to a given <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.IAlgorithmDescriptor.AddTo(Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository)">
            <summary>
            Adds the described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> instance.
            </summary>
            <param name="algorithmRepository">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> to add the described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.Count">
            <summary>
            Gets the number of algorithms contained in the repository.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.Add``1">
            <summary>
            Adds <typeparamref name="TAlgorithm"/> to the repository if the algorithm isn't already contained.
            </summary>
            <typeparam name="TAlgorithm">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to add to the repository.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.Clear">
            <summary>
            Removes all algorithms from the repository.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.Contains``1">
            <summary>
            Determines whether the repository contains a specific algorithm.
            </summary>
            <typeparam name="TAlgorithm">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to check.</typeparam>
            <returns>True if the algorithm is known; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.CopyTo(Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository)">
            <summary>
            Copies all algorithms to the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/>.
            </summary>
            <param name="algorithmRepository">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> to copy all algorithms to.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.Remove``1">
            <summary>
            Removes the specific algorithm from the repository.
            </summary>
            <typeparam name="TAlgorithm">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to remove.</typeparam>
            <returns>True if the algorithm was contained in the repository and removed; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.AlgorithmDescriptor`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.AlgorithmDescriptor`1"/> class describes
            a <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> so that it can be added to any <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> instance.
            </summary>
            <typeparam name="TAlgorithm">The type of the described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/>.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.AlgorithmDescriptor`1.AddTo(Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository)">
            <summary>
            Adds the described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> instance.
            </summary>
            <param name="algorithmRepository">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithmRepository"/> to add the described <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.ITolerationAlgorithm"/> to.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.AlgorithmDescriptor`1.Equals(Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.IAlgorithmDescriptor)">
            <summary>
            Determines equality between the current and the <paramref name="other"/> descriptor.
            </summary>
            <param name="other">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexTool.PickerAlgorithmCache.IAlgorithmDescriptor"/> to compare to.</param>
            <returns>True if the current instance equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/> class manages the activity of picking a new end-vertex on a polygon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.referenceVertex">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> from which the session originates.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.dimension">
            <summary>
            The instance visualizing the dimension between <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.referenceVertex"/> and the picked location.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/> class.
            </summary>
            <param name="referenceVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> from which the session originates.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.PickEndVertexSessionEndedHandler">
            <summary>
            Represents a method that handles the end-event of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/>.
            </summary>
            <param name="sender">The ended <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession"/>.</param>
            <param name="interrupted">A value indicating whether the session ended by an interrupt.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.Ending">
            <summary>
            Occurs when the session is ending.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.Algorithms">
            <summary>
            Gets the repository of toleration algorithms applied when tolerating for a pick point.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.OnInitialize">
            <summary>
            Initializes the session by starting a picker
            and by setting up a <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.SegmentDimensionManipulator"/> for the previews.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.OnNewVertexTolerated(Tekla.BIM.DirectManipulation.Services.Picking.IPickerListener,Tekla.BIM.DirectManipulation.Services.Picking.PickPointResolveEventArgs)">
            <summary>
            Handles the toleration events for the picker started by <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.OnInitialize"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.UpdateView">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.OnNewVertexPicked(Tekla.BIM.DirectManipulation.Services.Picking.IPickerListener,Tekla.BIM.DirectManipulation.Services.Picking.SinglePickCompletedEventArgs)">
            <summary>
            Handles the callback of the picker started by <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.OnInitialize"/>.
            New vertices are inserted by moving the existing end-vertex to the picked location and by then inserting a new vertex on the old end-vertex location.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The arguments of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.PickEndVertexSession.CheckAndProjectPoint(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Checks if picked point is in cage plane and if not projects it to the cage section plane.
            </summary>
            <param name="cagePlane">
            The cage plane.
            </param>
            <param name="pickedPoint">
            The picked point.
            </param>
            <returns>
            The projection of point in cage plane if point is not in cage plane.
            </returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool"/> class provides a <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl"/>
            for switching the visibility of diagonal dimensions.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool.ToolType">
            <summary>
            Gets the type of the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool.CreateNewControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instance for interacting with the tool from the <paramref name="targetNode"/>'s contextual tools.
            </summary>
            <param name="targetNode">The node for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tool.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool.GetDimensionChangeButton(Tekla.BIM.DirectManipulation.Services.Localization.LocalizedString,Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Gets the dimension change button.
            </summary>
            <param name="text">The text.</param>
            <param name="node">The node.</param>
            <param name="types">The types.</param>
            <returns>The button for changing the visible dimension types.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool.OnDimensionStateChanged(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Called when the <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl"/> was clicked.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetDimensionsVisibilityTool.UpdateImage(Tekla.BIM.DirectManipulation.Services.Controls.IControl,Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Sets the title glyph.
            </summary>
            <param name="control">The control.</param>
            <param name="node">The node.</param>
            <param name="types">The types.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetEndVertexNodeTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetEndVertexNodeTolerationBehaviorTool" /> creates the contextual tools for toggling the toleration behaviors for open end vertex nodes.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetEndVertexNodeTolerationBehaviorTool.IsAlongLineToleration(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <inheritdoc/>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetEndVertexNodeTolerationBehaviorTool.SetAlongLineToleration(Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex)">
            <inheritdoc/>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool"/> class provides a <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl"/>
            for switching between unrestricted or restricted segment handle behavior between perpendicular and longitudinal direction.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.Id">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.Is3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.IsLongitudinalToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.IsPerpendicularToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.Set3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.SetLongitudinalToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetComplexGeometryTolerationBehaviorTool.SetPerpendicularToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexNodeTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexNodeTolerationBehaviorTool" /> creates the contextual tools for toggling the toleration behaviors for vertex nodes.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool"/> class provides a tool
            for switching between unrestricted or restricted segment handle behavior between perpendicular and longitudinal direction.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.Id">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.CreateToggleButtons(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.CanCreateControls(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <summary>
            Determines whether this instance can create controls for the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns>
            <c>true</c> if this instance can create controls the specified target; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.CreateRestrictedTolerationBehavior(Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration)">
            <summary>
            Creates the restricted toleration behavior and applies it on the <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The created restricted toleration behavior setting.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.Is3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.IsLongitudinalToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.IsPerpendicularToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.Set3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <summary>
            Sets the 3D toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>True on success; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.SetLongitudinalToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.SetPerpendicularToleration(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetSegmentNodeTolerationBehaviorTool.OnTolerationBehaviorChanged(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1" /> creates the contextual tools for toggling the toleration behaviors for vertex nodes.
            </summary>
            <typeparam name="TVertex">The type of the vertex.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.GetCustomPlane(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.Is3DToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.IsCustomPlaneToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.IsDefaultPlaneToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.IsLineToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.SetLineToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.SetDefaultPlaneToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.Set3DToleration(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.SetCustomPlaneToleration(`0,Tekla.Common.Geometry.Plane3)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.SetVertexTolerationBehaviorTool`1.OnTolerationBehaviorChanged(`0,Tekla.Structures.Features.Common.Tools.PointTolerationTypes)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> enum specifies the type of tool of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool`1"/>.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Appearance">
            <summary>
            The tool affects the appearance of the polygonal manipulator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Modification">
            <summary>
            The tool modifies the polygonal shape.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Creation">
            <summary>
            The tool creates new vertices and/or segments in the polygonal shape.
            </summary>
            <remarks>
            A <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Creation"/> tool is always considered to also be a <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Modification"/> tool.
            By clearing the <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Creation"/> flag from a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> value, the <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType.Modification"/> flag is also cleared.
            </remarks>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1"/> provides the abstract base class for the contextual tools.
            </summary>
            <typeparam name="TNode">The type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> targeted by the tool.</typeparam>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1.Accelerator">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.Keys"/> accelerator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1.ToolType">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> describing the result of executing the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1.CreateNewControls(`0)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instance for interacting with the tool from the <paramref name="targetNode"/>'s contextual tools.
            </summary>
            <param name="targetNode">The <typeparamref name="TNode"/> for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tools.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ToolBase`1.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession"/> class handles the dragging of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession.#ctor(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession"/> class.
            </summary>
            <param name="draggedHandle">The dragged <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession.Move(Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves all selected nodes according to the translation caused by moving <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/> to <paramref name="newLocation"/>.
            </summary>
            <param name="newLocation">The new location for <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegmentDragSession.Move(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> according to the given <paramref name="translation"/>.
            </summary>
            <param name="segmentNode">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> to move.</param>
            <param name="translation">The translation to move <paramref name="segmentNode"/> with.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher"/> class aids in keeping track of interaction states
            based on which dimension visibility can be switched.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.HighlightSwitchTimeOut">
            <summary>
            The highlight switch time out value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.onStateChange">
            <summary>
            The delegate to the method to call when the state of the dimension visibility changed.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.lastHighlightTime">
            <summary>
            The last highlight time.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.state">
            <summary>
            The switch state.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher"/> class.
            </summary>
            <param name="onStateChange">A delegate to the method to call when the state of the dimension visibility changed.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState"/> enum specifies the different switch state types.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState.None">
            <summary>
            No active current state.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState.Highlighted">
            <summary>
            The target is currently highlighted.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState.Selected">
            <summary>
            The target is currently selected.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState.Switched">
            <summary>
            The target is currently switched on, for example by a long-enough highlight event.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.EnableDimensions">
            <summary>
            Gets a value indicating whether the dimensions should currently be enabled.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchByHighlightDisabled">
            <summary>
            Gets or sets a value indicating whether permanent on/off-switching by highlighting is enabled.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.ToggleDimension(System.Boolean)">
            <summary>
            Toggles the dimension.
            </summary>
            <param name="isEnabled">A value indicating whether to toggle the dimension on.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.OnHighlightChanged(System.Boolean)">
            <summary>
            Switches the highlight state according to the given value.
            </summary>
            <param name="highlighted">A value indicating whether the highlight state should be switched on or off.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.OnSelectionChanged(System.Boolean)">
            <summary>
            Switches the selection state according to the given value.
            </summary>
            <param name="selected">A value indicating whether the selection state should be switched on or off.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.ResetState">
            <summary>
            Resets the state to disable dimension visibility.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SetStateFlag(Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState,System.Boolean)">
            <summary>
            Enables or disables <paramref name="flag"/> on <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.state"/>.
            If the change alters <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.EnableDimensions"/>, <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.onStateChange"/> is invoked.
            </summary>
            <param name="flag">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DimensionsVisualizationSwitcher.SwitchState"/> value to enable or disable.</param>
            <param name="enabled">A value indicating whether <paramref name="flag"/> must be enabled.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool"/> interface interfaces any type of tool which can be part of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>'s contextual tools.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool.Accelerator">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.Keys"/> accelerator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool.ToolType">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType"/> describing the result of executing the tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool.InvokeByAccelerator(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="targetNode">The sender node</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1"/> abstract class provides the data resolver.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.Data">
            <summary>
            Gets the resolved data.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.GetStorage(`0)">
            <summary>
            Gets the storage data resolver.
            </summary>
            <param name="instance">The data instance.</param>
            <returns>A new instance of the storage data resolver.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.GetDynamic(System.Func{`0})">
            <summary>
            Gets the dynamic data resolver.
            </summary>
            <param name="resolver">The data resolver.</param>
            <returns>A new instance of the dynamic data resolver.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1"/> provides data which could be resolved from static storage.
            </summary>
            <typeparam name="TStoredData">The type of the stored data.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1.data">
            <summary>
            The data storage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1" /> class.
            </summary>
            <param name="instance">The data instance.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.StorageDataResolver`1.Data">
            <summary>
            Gets the resolved data.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1" /> provides data which could be resolved dynamically.
            </summary>
            <typeparam name="TResolvedData">The type of the data.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1.resolver">
            <summary>
            The function used to resolve the data.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1.#ctor(System.Func{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1"/> class.
            </summary>
            <param name="resolverFunction">The resolver function.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.DataResolver`1.FunctionalDataResolver`1.Data">
            <summary>
            Gets the resolved data.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession"/> interface provides events related to a loop node drag session.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession.Ongoing">
            <summary>
            Occurs when the session changed handle positions.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession.Ended">
            <summary>
            Occurs when the session has ended.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession.LocationChanged">
            <summary>
            Occurs when handle position has been changed.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory"/> interface provides a set of factory methods
            for constructing and initializing different types of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> implementations.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.ConstructComplexSegment">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> instance.
            </summary>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.ConstructSegment">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> instance.
            </summary>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.ConstructVertex(Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint)">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.
            </summary>
            <param name="polygonPoint">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> to wrap.</param>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.ConstructVertex(Tekla.Common.Geometry.Vector3)">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance on a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/>.
            </summary>
            <param name="vertexLocation">
            The location of the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>, for which a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> is created.
            </param>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.ConstructVertex(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,System.Action{Tekla.Structures.Features.Common.PolygonManipulation.LoopNode})">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance that wraps an existing <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/>.
            </summary>
            <param name="vertexHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/> to construct the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> on.</param>
            <param name="doInsert">A delegate to the method that inserts the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> into a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/>.</param>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory.InitializeNode(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Initializes the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> instance.
            </summary>
            <param name="loopNode">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> to initialize.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> class represents and manages a collection of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> instances.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.validationCallbacks">
            <summary>
            The collection of custom assertion callbacks to consider when asserting.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.linkedNodes">
            <summary>
            The actual collection of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> instances providing the manipulators for the polygonal object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.nodeFactory">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory"/> instance that creates the nodes in the collection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.polygonPlane">
            <summary>
            The plane formed by the polygon points, if any.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> class.
            </summary>
            <param name="nodeFactory">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeFactory"/> instance that creates the nodes in the collection.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.ValidationEventHandler">
            <summary>
            Represents a method that validates any <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> against the given <paramref name="requirements"/>.
            </summary>
            <param name="sender">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> to assert.</param>
            <param name="requirements">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements"/> to assert <paramref name="sender"/> against.</param>
            <returns>True if <paramref name="sender"/> is considerd as valid; otherwise, false.</returns>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Validating">
            <summary>
            Occurs when the polygon is being validated.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.CoordinateSystem">
            <summary>
            Gets or sets the default <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> for the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.IsPlanar">
            <summary>
            Gets a value indicating whether the polygon is considered as planar.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Parent">
            <summary>
            Gets or sets the target object which is being manipulated.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Plane">
            <summary>
            Gets the reference plane of the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Requirements">
            <summary>
            Gets the requirements defining the conditions on which the <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.linkedNodes"/> are considered as valid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.ApplyChamferToNewVertex">
            <summary>
            Gets or sets a value indicating whether to set the chamfer value
            when a point is inserted into a polyline.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.HandleColor">
            <summary>
            Gets or sets a value indicating the color to assign to the handle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AllowPolygonDelete">
            <summary>
            Gets or sets a value indicating whether the whole polygon is allowed to be deleted by keyboard delete key.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AllowCtrlDragCopy">
            <summary>
            Gets or sets a value indicating whether the polygon is allowed to be copied by ctrl-drag.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AllowSegmentDragIn3D">
            <summary>
            Gets or sets a value indicating whether the leg face edge is allowed to be dragged perpendicular or longitudinal or in 3D.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.CreateComplexSegmentHandle">
            <summary>
            Gets or sets a value indicating whether the polygon handle is complex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Segments">
            <summary>
            Gets the read-only <see cref="T:System.Collections.Generic.IList`1"/> representing the current segments of the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Valid">
            <summary>
            Gets a value indicating whether the polygon is considered as valid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Vertices">
            <summary>
            Gets the read-only <see cref="T:System.Collections.Generic.IList`1"/> representing the current vertices of the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.ComplexSegment">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> representing the current LoopComplexSegment of the polygon.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AddAfter(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex,Tekla.Common.Geometry.Vector3)">
            <summary>
            Adds a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> pair after the given
            <paramref name="previousVertex"/> on the given <paramref name="vertexLocation"/>.
            </summary>
            <param name="previousVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to add the new vertex after.</param>
            <param name="vertexLocation">The location to add the new vertex on.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AddAfter(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex,Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle)">
            <summary>
            Adds a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> pair after the given
            <paramref name="previousVertex"/>, wrapping the given <paramref name="vertexHandle"/>.
            </summary>
            <param name="previousVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to add the new vertex after.</param>
            <param name="vertexHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/> to create the new vertex by.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AddBefore(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex,Tekla.Common.Geometry.Vector3)">
            <summary>
            Adds a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> pair before the given
            <paramref name="nextVertex"/> on the given <paramref name="vertexLocation"/>.
            </summary>
            <param name="nextVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to add the new vertex before.</param>
            <param name="vertexLocation">The location to add the new vertex on.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.AddBefore(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex,Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle)">
            <summary>
            Adds a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> pair before the given
            <paramref name="nextVertex"/>, wrapping the given <paramref name="vertexHandle"/>.
            </summary>
            <param name="nextVertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to add the new vertex before.</param>
            <param name="vertexHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/> to create the new vertex by.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Remove(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,System.Boolean)">
            <summary>
            Removes <paramref name="loopNode"/> from the collection.
            </summary>
            <param name="loopNode">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> to remove.</param>
            <param name="removeNeighbor">A value indicating whether one of the neighbors of <paramref name="loopNode"/> should also be removed.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Reset(System.Collections.Generic.IEnumerable{Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint})">
            <summary>
            Resets the collection to wrap the given <paramref name="polygonVertices"/>.
            </summary>
            <param name="polygonVertices">The sequence of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> instances representing the polygon.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Update(System.Collections.IList)">
            <summary>
            Updates the collection to wrap the given <paramref name="polygonVertices"/>.
            </summary>
            <param name="polygonVertices">The sequence of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> instances representing the polygon.</param>
            <returns>True if the loop vertices could be updated; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.UpdateView">
            <summary>
            Updates the appearance of all nodes in the polygon.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.RefreshAnyComplexSegment">
            <summary>
            Refresh any existing complex segment and handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Validate">
            <summary>
            Determines the validity of the current polygon against the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Requirements"/>.
            </summary>
            <returns>True if <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.linkedNodes"/> defines a valid polygon according to the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.Requirements"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.ValidateCurrentVertices(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3})">
            <summary>
            Validate the current vartices count.
            </summary>
            <param name="currentVertices">The current vertices.</param>
            <returns>True if the current vertices count has been validated; otherwise false;</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.ValidateSegmentRequirements(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3})">
            <summary>
            Validate the segments against the requirements.
            </summary>
            <param name="currentVertices">The current vertices.</param>
            <returns>True if Valid has been set; otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection.InsertNewVertex(Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,System.Action{System.Collections.Generic.LinkedListNode{Tekla.Structures.Features.Common.PolygonManipulation.LoopNode}})">
            <summary>
            Inserts a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and a new connecting <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> into the polygon.
            </summary>
            <param name="location">The location of the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</param>
            <param name="vertexHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/> of the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</param>
            <param name="doInsert">A delegate to the method to use for inserting new nodes.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventHandler">
            <summary>
            A delegate used in passing event information from the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession"/> to the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase"/>.
            </summary>
            <param name="sender">The drag session that sends the event.</param>
            <param name="e">Information about the event.></param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs">
            <summary>
            This class is used to previde information about <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> dragging events.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Toleration.InputModifiers,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs"/> class.
            </summary>
            <param name="node">The loop node being dragged.</param>
            <param name="modifiers">The input modifiers.</param>
            <param name="interrupted">A value indicating whether the drag session has been interrupted.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs.Node">
            <summary>
            Gets the loop node.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs.InputModifiers">
            <summary>
            Gets the input modifiers.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs.Interrupted">
            <summary>
            Gets or sets a value indicating whether the drag session was interrupted.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSessionFactory">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSessionFactory"/> class creates an instance of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession"/>
            for any given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/>, based on the type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> owning the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/>.
            The type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession"/> determines the behavior of the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/> during drag.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSessionFactory.Create(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Returns an instance that will handle the drag events for <paramref name="draggedHandle"/>.
            </summary>
            <param name="draggedHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/> for which dragging has started, and ongoing events must be handled.</param>
            <returns>A new instance handling the drag events for <paramref name="draggedHandle"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs"/> class provides the event arguments that are passed with loop node events.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs.#ctor(System.Collections.Generic.IList{Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs"/> class.
            </summary>
            <param name="vertices">The list of affected vertices.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs.Vertices">
            <summary>
            Gets the read-only collection of all vertices associated with the event.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes"/> enum specifies the different loop node types.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes.None">
            <summary>
            No handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes.Point">
            <summary>
            The point handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes.Segment">
            <summary>
            The segment handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes.EndPoint">
            <summary>
            The end point handles of open polygonal objects.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeTypes.InsertionPoint">
            <summary>
            The midpoint handles for creating new polygon points.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession"/> class handles the change events of a <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase"/> of a <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.LoopSegment"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession"/> class.
            </summary>
            <param name="affectedSegment">The <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.LoopSegment"/> on which a dimension is being dragged.</param>
            <param name="dimensionManipulator">The dragged <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase"/> instance.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.Ongoing">
            <summary>
            Occurs when the session changed handle positions.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.Ended">
            <summary>
            Occurs when the session has ended.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.LocationChanged">
            <summary>
            Occurs when handle position has been changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.LoopSegment">
            <summary>
            Gets the loop segment.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.DimensionManipulator">
            <summary>
            Gets the dimension manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.Dispose">
            <summary>
            Releases the driving <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.SegmentDimensionManipulator"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.OnMeasureChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles the <see cref="E:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase.MeasureChangeOngoing"/> event and forwards it to <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.Ongoing"/>.
            </summary>
            <param name="dimensionManipulator">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.OnMeasureChanged(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles the <see cref="E:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase.MeasureChanged"/> event and forwards it to <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession.Ended"/>.
            </summary>
            <param name="dimensionManipulator">The dimension manipulator.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession"/> class handles the dragging of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession.#ctor(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession"/> class.
            </summary>
            <param name="draggedHandle">The dragged <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession.Move(Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves all selected nodes according to the translation caused by moving <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/> to <paramref name="newLocation"/>.
            </summary>
            <param name="newLocation">The new location for <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDragSession.Move(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> according to the given <paramref name="translation"/>.
            </summary>
            <param name="segmentNode">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> to move.</param>
            <param name="translation">The translation to move <paramref name="segmentNode"/> with.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession"/> class manages the dragging of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> instances.
            This class can only be used for managing the drag of segments which are part of a planar object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession.#ctor(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession"/> class.
            </summary>
            <param name="draggedHandle">The dragged <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/>, which will be driving the session.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession.Move(Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves all selected nodes according to the translation caused by moving <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/> to <paramref name="newLocation"/>.
            </summary>
            <param name="newLocation">The new location for <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession.GetOffsettedLine(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,System.Double)">
            <summary>
            Gets a <see cref="T:Tekla.Common.Geometry.Line3"/> value offset by the given <paramref name="offset"/> from <paramref name="segmentNode"/>.
            </summary>
            <param name="segmentNode">The reference <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> to get the offset <see cref="T:Tekla.Common.Geometry.Line3"/> from.</param>
            <param name="offset">The total offset of the <see cref="T:Tekla.Common.Geometry.Line3"/> to return.</param>
            <returns>An offsetted <see cref="T:Tekla.Common.Geometry.Line3"/> value.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession.GetPositiveOffsetDirection(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <summary>
            Gets the direction considered as positive offset direction for <paramref name="loopSegment"/>.
            </summary>
            <param name="loopSegment">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> to get the positive offset direction for.</param>
            <returns>The direction considered as positive offset direction for <paramref name="loopSegment"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentOffsetSession.Offset(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex,System.Double)">
            <summary>
            Offsets the selected neighboring segments of <paramref name="vertex"/> by the given <paramref name="offset"/>.
            </summary>
            <param name="vertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to offset.</param>
            <param name="offset">The distance by which to offset <paramref name="vertex"/>.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertexDragSession">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertexDragSession"/> class handles the dragging of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertexDragSession.#ctor(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertexDragSession"/> class.
            </summary>
            <param name="draggedHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/> that's being dragged.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertexDragSession.Move(Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves all selected nodes according to the translation caused by moving <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/> to <paramref name="newLocation"/>.
            </summary>
            <param name="newLocation">The new location for <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/>.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration"/> class provides all settings affecting the dimensions for any <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration.AlwaysVisible">
            <summary>
            Gets or sets a value indicating whether to show the dimension lines.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration.VisibleAxes">
            <summary>
            Gets or sets a value specifying the directions for which to display dimensions.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.NodeDimensionsConfiguration.InputDirection">
            <summary>
            Gets or sets the input direction.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration"/> class provides all settings affecting the handle drag behavior.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration.SnapStep">
            <summary>
            Gets or sets the type of snap step to apply on all handles.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration.TolerationBehavior">
            <summary>
            Gets or sets the configured toleration behavior.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the configuration on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/>.
            </summary>
            <param name="handle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/> to apply the configuration on.</param>
            <param name="polygon">The polygon to consider when applying the configuration.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration.ApplyTypeChange(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the toleration type change on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/>.
            </summary>
            <param name="handle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/> to apply the toleration on.</param>
            <param name="polygon">The polygon to consider when applying the configuration.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions"/> class provides extension method for the loop node drag configuration.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.CreateRestrictedTolerationBehavior(Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration)">
            <summary>
            Creates the restricted toleration behavior for the <paramref name="nodeConfiguration"/>.
            </summary>
            <param name="nodeConfiguration">The node drag configuration.</param>
            <returns>The created restricted toleration behavior setting.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.GetPointTolerationTypes(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Gets the active point toleration types.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns>The active point toleration types.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.Is3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the 3D toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the 3D toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsCustomPlaneTolerationForPoint(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the custom plane toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the custom plane toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.GetCustomPlaneTolerationForPoint(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the custom plane toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the custom plane toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsDefaultPlaneTolerationForPoint(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the default plane toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the default plane toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsLineTolerationForPoint(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the line toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the line toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsAlongLineTolerationForPoint(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether along the line toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The setting.</param>
            <returns>
              <c>true</c> if along the line toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsLongitudinalTolerationForSegment(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the 3D toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the 3D toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.IsPerpendicularTolerationForSegment(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Determines whether the 3D toleration is active for the specified <paramref name="setting"/>.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns><c>true</c> if the 3D toleration is active for the specified <paramref name="setting"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.GetSegmentTolerationTypes(Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting)">
            <summary>
            Gets the active point toleration types.
            </summary>
            <param name="setting">The toleration behavior setting.</param>
            <returns>The active point toleration types.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.Set3DToleration(Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration)">
            <summary>
            Sets 3D toleration for the <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The target configuration.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfigurationExtensions.GetCustomPointReferencePlane(Tekla.Structures.Features.Common.PolygonManipulation.NodeDragConfiguration)">
            <summary>
            Gets the custom point reference plane, if any.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The custom point reference plane, if any.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1"/> provides the manipulator targeted at modifying polygons.
            </summary>
            <typeparam name="TPoint">The type of the point.</typeparam>
            <seealso cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1" />
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1.resolver">
            <summary>
            The vertices resolver.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1.#ctor(System.Boolean,System.Object,System.Func{System.Collections.ArrayList})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1"/> class.
            </summary>
            <param name="closed">A value indicating whether the polygon is closed.</param>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="verticesResolver">The vertices resolver.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1.Vertices">
            <summary>
            Gets the vertices.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulator`1.SetParent(System.Object)">
            <summary>
            Initializes the polygon input data.
            </summary>
            <param name="parent">The target manipulated object.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase">
            <summary>
            The abstract <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase"/> is the base class for any manipulator targeted at modifying polygonal objects.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.SessionName">
            <summary>
            The session name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.DimensionVisibilityId">
            <summary>
            The identifier for dimension visibility settings.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.#ctor(System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase"/> class.
            </summary>
            <param name="closed">A value indicating whether the polygon is closed.</param>
            <param name="parent">The target object which is being manipulated.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.SegmentChangedEventHandler">
            <summary>
            The segment changed event handler.
            </summary>
            <param name="originalSegment">The original segment.</param>
            <param name="newSegment">The new segment.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.VertexHandleDragEventHandler">
            <summary>
            The vertex point handle drag event handler.
            </summary>
            <param name="index">The vertex index.</param>
            <param name="vertex">The vertex being dragged.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnCommit">
            <summary>
            Occurs on committing changes given the commit result in the parameter.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnModifiedDragStarting">
            <summary>
            The on ctrl or alt drag starting.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnModifiedDragEnded">
            <summary>
            The on ctrl or alt drag ended event.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.EndVertexDragStarting">
            <summary>
            The end vertex drag starting.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.EndVertexHighlightChanged">
            <summary>
            The end vertex highlight changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.NodeSelectionChanged">
            <summary>
            Occurs when the node selection has been changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.UpdateViewRequired">
            <summary>
            The update view required.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.NodeDeleted">
            <summary>
            Occurs when the the has been deleted.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices">
            <summary>
            Gets the vertices.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Polygon">
            <summary>
            Gets the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.EqualityComparer">
            <summary>
            Gets or sets the equality comparer used to distinguish between equal target parent objects.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.HandleAppearance">
            <summary>
            Gets or sets the handle appearance.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tools">
            <summary>
            Gets the tools.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ContextualSession">
            <summary>
            Gets or sets the session store service.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.AltDragging">
            <summary>
            Gets a value indicating whether alt is pressed while dragging an edge or vertex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.CtrlDragging">
            <summary>
            Gets a value indicating whether ctrl is pressed while dragging an edge or vertex.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.SetEnabled(System.Boolean)">
            <summary>
            Sets the enabled.
            </summary>
            <param name="value">The new enabled value.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Cancel">
            <summary>
            Cancels all ongoing modifications.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Commit">
            <summary>
            Commits the current polygon modifications.
            </summary>
            <returns>True if the commit was successful; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#ConstructComplexSegment">
            <summary>
            The construct complex segment.
            </summary>
            <returns>The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#ConstructSegment">
            <summary>
            The construct segment.
            </summary>
            <returns>The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#ConstructVertex(Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint)">
            <summary>
            The construct vertex.
            </summary>
            <param name="polygonPoint">The polygon point.</param>
            <returns>The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#ConstructVertex(Tekla.Common.Geometry.Vector3)">
            <summary>
            The construct vertex.
            </summary>
            <param name="vertexLocation">The vertex location.</param>
            <returns>The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#ConstructVertex(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,System.Action{Tekla.Structures.Features.Common.PolygonManipulation.LoopNode})">
            <summary>
            The construct vertex.
            </summary>
            <param name="vertexHandle">The vertex handle.</param>
            <param name="doInsert">The do insert.</param>
            <returns>The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Tekla#Structures#Features#Common#PolygonManipulation#ILoopNodeFactory#InitializeNode(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            The initialize node.
            </summary>
            <param name="loopNode">The loop node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Refresh">
            <summary>
            Refreshes the manipulator view.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.UpdatePolygon">
            <summary>
            Updates the polygon.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ResetPolygon">
            <summary>
            Resets the polygon.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnInitialize">
            <summary>
            Performs the required actions to initialize the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.LoadInsertionPointFromSession">
            <summary>
            The load insertion point from session.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.GetPoints">
            <summary>
            Gets the points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.
            </summary>
            <returns>The points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.GetPolygonPoint(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the polygon point from the given <paramref name="vertexLocation"/>.
            </summary>
            <param name="vertexLocation">The vertex location.</param>
            <returns>The polygon point from the given <paramref name="vertexLocation"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.UpdatePolygonVertices">
            <summary>
            Update the polygon vertices.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.AttachEventHandlers(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            The attach event handlers.
            </summary>
            <param name="node">The node.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="node" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.GetPolygonPoints">
            <summary>
            Gets the polygon points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.
            </summary>
            <returns>The polygon points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ApplyChanges(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Applies changes when a drag session is ended to the underlying object and commits the changes to the model database.
            </summary>
            <param name="loopNode">the loop node that was dragged.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeDragSessionOngoing(Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs)">
            <summary>
            Handles the node drag session ongoing event.
            </summary>
            <param name="sender">The drag session sender.</param>
            <param name="e">The event object.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeHighlightChanged(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Handles the <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DragStarted"/> event for any of the nodes.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnContextualToolsRequested(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            The event handler when the contextual tool is requested.
            </summary>
            <param name="sender">The sender.</param>
            <returns>The <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.IControlsGroup"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeKeyPressed(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Handles the <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.KeyPressed"/> event.
            Searches the available contextual tools and invokes the tool behavior
            by using the <paramref name="pressedKey"/> accelerator.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="pressedKey">The key pressed by the user.</param>
            <returns>True if the event was handled; otherwise, false.</returns>
            <exception cref="T:System.ApplicationException">Thrown when the same accelerator is defined for multiple tools.</exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeSelectionChanged(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Handles the <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.SelectionChanged"/> event.
            </summary>
            <param name="loopNode">The target loop node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnUpdateViewRequired">
            <summary>
            The on update view required.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeDragSessionStarting(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession,Tekla.BIM.DirectManipulation.Services.Toleration.InputModifiers)">
            <summary>
            Handles the <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DragStarted"/> event for any of the nodes.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="dragSession">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession"/> handling the drag sequence.</param>
            <param name="inputModifiers">The input modifiers.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeDragSessionEnded(Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragEventArgs)">
            <summary>
            The on node drag session ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event argument.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnSegmentDimensionChanged(System.Object,Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment)">
            <summary>
            Called when the segment dimension has been changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="loopSegment">The loop segment.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertFirstAndEndVertices">
            <summary>
            Converts first and end vertices.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeLocationChanged(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Called when node location has been changed.</summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.OnNodeDeletion(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs)">
            <summary>
            The on node deletion.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertToEndVertex(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex)">
            <summary>
            Gets an <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> from the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.
            </summary>
            <seealso cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertFirstVertex"/>
            <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertLastVertex"/>
            <param name="vertex">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> to get an <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> instance from.</param>
            <returns>An <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> from the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertFirstVertex">
            <summary>
            Asserts that the first node of the polygon is a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and converts it to an <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.ConvertLastVertex">
            <summary>
            Asserts that the last node of the polygon is a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> and converts it to an <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/>.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1">
            <summary>
            The abstract <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1"/> is the base class for any manipulator targeted at modifying polygonal objects.
            </summary>
            <typeparam name="TPoint">The <see cref="T:Tekla.Structures.Geometry3d.Point"/> type defining the vertex points of the polygon.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1.#ctor(System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1"/> class.
            </summary>
            <param name="closed">A value indicating whether the polygon is closed.</param>
            <param name="parent">The target object which is being manipulated.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1.GetPoints">
            <summary>
            Gets the points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.
            </summary>
            <returns>The points from the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase.Vertices"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1.GetPolygonPoint(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the polygon point from the given <paramref name="vertexLocation"/>.
            </summary>
            <param name="vertexLocation">The vertex location.</param>
            <returns>The polygon point from the given <paramref name="vertexLocation"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonManipulatorBase`1.OnNodeDeleted(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs)">
            <summary>
            Called when a node is deleted.
            </summary>
            <param name="loopNode">The loop node.</param>
            <param name="loopNodeEventArgs">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements"/> class allows the specification of what is considered as a valid polygon
            and can assert any given polygon points against the requirements.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.Closed">
            <summary>
            Gets or sets a value indicating whether the polygon must be considered as a closed loop.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.ConstantPlaneNormal">
            <summary>
            Gets or sets a value indicating whether the normal of the polygon plane must be constant.
            This value is only considered when the polygon must be <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.Planar"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.MinimumEdgeLength">
            <summary>
            Gets or sets the minimum length of any single edge in the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.MaximumVertexCount">
            <summary>
            Gets or sets the maximum number of vertices in the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.MinimumVertexCount">
            <summary>
            Gets or sets the minimum number of vertices in the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.Planar">
            <summary>
            Gets or sets a value indicating whether the polygon must be planar.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonRequirements.SelfIntersectable">
            <summary>
            Gets or sets a value indicating whether the polygon is allowed to have intersecting edges.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes"/> enum specifies the type of restricted toleration type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes.Line">
            <summary>
            Toleration is restricted to line.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes.Plane">
            <summary>
            Toleration is restricted to plane.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes.Perpendicular">
            <summary>
            Toleration is restricted to perpendicular direction.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes.Longitudinal">
            <summary>
            Toleration is restricted to longitudinal direction.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting"/> class defines unrestricted toleration settings
            for handles.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting.Name">
            <summary>
            Gets the name of the unrestricted toleration behavior setting.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting.Description">
            <summary>
            Gets the description of the unrestricted toleration behavior setting.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting.ApplyTypeChange(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the toleration type change on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/>.
            </summary>
            <param name="handle">The point handle.</param>
            <param name="polygon">The polygon.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when the toleration behavior for a point handle needs to be set.
            </summary>
            <param name="handle">The point handle.</param>
            <param name="referencePlane">The reference plane.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="handle" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.UnrestrictedTolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when the toleration behavior for a segment handle needs to be set.
            </summary>
            <param name="handle">The segment handle.</param>
            <param name="referencePlane">The reference plane.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="handle" /></exception>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager"/> interface specifies a set of collections managing the tools to display in any contextual toolbar.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Common">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.EndVertex">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Segment">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.ComplexSegment">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Vertex">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> items.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Add``1(Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool{``0})">
            <summary>
            Adds the contextual tools to the loop nodes of type <typeparamref name="TNode" />.
            </summary>
            <typeparam name="TNode">The type of the node.</typeparam>
            <param name="tool">The tool for the loop node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Remove``1">
            <summary>
            Removes the tool of type <typeparamref name="TTool"/> from all tool collections.
            </summary>
            <typeparam name="TTool">The type of tool to remove.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Remove(Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType)">
            <summary>
            Removes all tools having <paramref name="toolType"/> as their <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool.ToolType"/> property.
            </summary>
            <param name="toolType">The type of tool to remove.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualToolManager.Clear">
            <summary>
            Clears all tools.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool`1"/> interface interfaces any type of tool which can be part of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>'s contextual tools.
            </summary>
            <typeparam name="TNode">The type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> targeted by the tool.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool`1.CreateNewControls(`0)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instance for interacting with the tool from the <paramref name="targetNode"/>'s contextual tools.
            </summary>
            <param name="targetNode">The <typeparamref name="TNode"/> for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tools.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration"/> interface provides the properties specifying configuration options that need to be applied on <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> instances.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration.EnabledHandleTypes">
            <summary>
            Gets or sets which types of handles are visible.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration.DimensionsConfiguration">
            <summary>
            Gets the configuration instance affecting the dimensions for the loop nodes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration.DragConfiguration">
            <summary>
            Gets the configuration instance affecting the drag behavior of the loop nodes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration.HandleAppearance">
            <summary>
            Gets or sets the appearance of handles.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode">
            <summary>
            The abstract <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> class is the base class for any type of node in the loop representing the polygonal object contours.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> class.
            </summary>
            <param name="owningPolygon">The owning polygon.</param>
            <param name="configuration">The configuration to apply on the node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> class by partly copying <paramref name="otherNode"/>.
            The resulting <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> will have the same <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Link"/> and <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Polygon"/> properties as <paramref name="otherNode"/>.
            </summary>
            <param name="otherNode">A <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> to copy properties from.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.ContextualToolsRequested">
            <summary>
            Occurs when a contextual tool is requested for the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            The returned value is used as the contextual tools.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DeleteRequested">
            <summary>
            Occurs when the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> must be deleted.
            The first argument is the sender.
            The second argument is the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs"/> which contains the sequence of all vertices
            which were affected by the deletion of all selected nodes.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DragStarted">
            <summary>
            Occurs when the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> starts to be dragged.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.KeyPressed">
            <summary>
            Occurs when the user presses a key supported by the DM.
            The return value indicates whether any handles were under the cursor when the event occurred.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.HighlightChanged">
            <summary>
            Occurs when the user presses a key supported by the DM.
            The return value indicates whether any handles were under the cursor when the event occurred.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.SelectionChanged">
            <summary>
            Occurs when the node selection has been changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.UpdateViewRequired">
            <summary>
            The update view required.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Next">
            <summary>
            Gets the next <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Previous">
            <summary>
            Gets the previous <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Polygon">
            <summary>
            Gets the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> owning the current node.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Configuration">
            <summary>
            Gets the configuration of the node.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Link">
            <summary>
            Gets the underlying node of the containing <see cref="T:System.Collections.Generic.LinkedList`1"/> of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> instances.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Invalid">
            <summary>
            Gets or sets a value indicating whether the node should be treated as invalid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.IsModified">
            <summary>
            Gets a value indicating whether the node has been modified since the last commit.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Selected">
            <summary>
            Gets a value indicating whether the node is selected.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Visible">
            <summary>
            Gets a value indicating whether the node is visible.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.VisibleDimensions">
            <summary>
            Gets a value indicating whether any dimensions are visible for the current node.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.Parent">
            <summary>
            Gets or sets the parent object which is being manipulated.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.VisibleDimensionsSwitcher">
            <summary>
            Gets the instance deciding whether any dimensions are visible for the current node.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.UpdateTolerationBehavior">
            <summary>
            Updates the configuration for the toleration behavior of the handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.RefreshView">
            <summary>
            Updates the view.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.RaiseUpdateViewRequiredEvent">
            <summary>
            The raise update view required event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.AttachHandle(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Attaches all required event handlers to <paramref name="handle"/>.
            </summary>
            <remarks>
            The opposite action can be completed with <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DetachHandle(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)"/>.
            </remarks>
            <param name="handle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/> to connect all event handlers to.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DetachHandle(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Detaches all known event handlers from the given <paramref name="handle"/> and sets its <see cref="P:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle.Tag"/> to zero.
            </summary>
            <param name="handle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/> to detach from the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnDragStarted(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            When not overridden, forwards any drag start event to <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnDragStarted(Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession,Tekla.BIM.DirectManipulation.Services.Toleration.InputModifiers)"/>.
            </summary>
            <param name="draggedHandle">The handle from which the event originates.</param>
            <param name="eventArgs">The arguments of the event handle drag event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnDragStarted(Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeDragSession,Tekla.BIM.DirectManipulation.Services.Toleration.InputModifiers)">
            <summary>
            When not overridden, forwards any drag start event to <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DragStarted"/>.
            </summary>
            <param name="dragSession">The sender of the event.</param>
            <param name="inputModifiers">The input modifiers.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnDeleteRequested(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleEventArgs)">
            <summary>
            Collects all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instances to delete
            and forwards the event to <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DeleteRequested"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
            <returns>True if the vertex can be deleted; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnContextualToolsRequested(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleEventArgs)">
            <summary>
            Forwards any contextual tool request to <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.ContextualToolsRequested"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
            <returns>The contextual tool to display.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnKeyPressed(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{Tekla.BIM.DirectManipulation.Services.Interaction.Keys})">
            <summary>
            Handles <see cref="E:Tekla.BIM.DirectManipulation.Services.Interaction.IHandleStateEvents.KeyPressed"/> events.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
            <returns>True if the event was consumed; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnHighlightChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Handles <see cref="E:Tekla.BIM.DirectManipulation.Services.Interaction.IHandleStateEvents.HighlightChanged"/> events.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.OnSelectionChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleSelectionEventArgs)">
            <summary>
            Handles <see cref="E:Tekla.BIM.DirectManipulation.Services.Interaction.IHandleStateEvents.SelectedChanged"/> events.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1"/> class handles the dragging of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            </summary>
            <typeparam name="TNode">The type of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> wrapped by the session.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.#ctor(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1"/> class.
            </summary>
            <param name="draggedHandle">The dragged <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle"/>, which will be driving the session.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Ended">
            <summary>
            Occurs when the session has ended.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Ongoing">
            <summary>
            Occurs when the session changed handle positions.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.LocationChanged">
            <summary>
            Occurs when handle position has been changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node">
            <summary>
            Gets the node driving the drag session.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Move(Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves all selected nodes according to the translation caused by moving <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/> to <paramref name="newLocation"/>.
            </summary>
            <param name="newLocation">The new location for <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.Node"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.OnDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Handles the <see cref="E:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandleEvents.DragEnded"/> for the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/> driving the drag session.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.OnLocationChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>Called when the location changed.</summary>
            <param name="sender">The sender.</param>
            <param name="eventargs">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeDragSession`1.OnDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Handles the <see cref="E:Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandleEvents.DragOngoing"/> for the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/> driving the drag session.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions"/> class contains extension methods for the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.NextVertex(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the next vertex.
            </summary>
            <param name="node">The node to get the next vertex for.</param>
            <returns>The next vertex.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.NextSegment(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the next segment.
            </summary>
            <param name="node">The node to get the next segment for.</param>
            <returns>The next segment.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.PreviousVertex(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the previous vertex.
            </summary>
            <param name="node">The node to get the previous vertex for.</param>
            <returns>The previous vertex.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.PreviousSegment(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the previous segment.
            </summary>
            <param name="node">The node to get the previous segment for.</param>
            <returns>The previous segment.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.UpdateSegmentVertices(Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment,Tekla.Common.Geometry.Segment3)">
            <summary>
            Updates all vertices affected by the state of <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment" />.
            </summary>
            <param name="loopSegment">The loop segment.</param>
            <param name="drivingSegment">The driving segment.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.Next``1(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the next node.
            </summary>
            <typeparam name="TNode">The type of the node to get.</typeparam>
            <param name="node">The node to get the next node for.</param>
            <returns>The next node.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeExtensions.Previous``1(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the previous node.
            </summary>
            <typeparam name="TNode">The type of the node to get.</typeparam>
            <param name="node">The node to get the previous node for.</param>
            <returns>The previous node.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> is a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> representing a complex handle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.complexHandle">
            <summary>
            The complex handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,Tekla.BIM.DirectManipulation.Geometry.ComplexGeometry,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> class.
            </summary>
            <param name="owningPolygon">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> owning the new node.</param>
            <param name="geometry">The geometry to use for initialization.</param>
            <param name="configuration">The configuration to apply on the node.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.OriginalLocation">
            <summary>
            Gets or sets the original complex geometry.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.ComplexSegment">
            <summary>
            Gets or sets the complex segment.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.ComplexGeometry">
            <summary>
            Gets or sets the complex geometry.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.IsModified">
            <summary>
            Gets a value indicating whether the complexSegment is modified.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.Selected">
            <summary>
            Gets a value indicating whether the complexHandle is selected.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.Invalid">
            <summary>
            Gets or sets a value indicating whether the node should be treated as invalid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.Visible">
            <summary>
            Gets a value indicating whether the node is visible.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.RequestDelete">
            <summary>
            Delete the segment handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.UpdateTolerationBehavior">
            <summary>
            Updates the configuration for the toleration behavior of the handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.SetHandleSelected(System.Boolean)">
            <summary>
            Selects the handle and, if successful shows the contextual toolbar as specified in <paramref name="invokeContextualTools"/>.
            </summary>
            <param name="invokeContextualTools">Whether to invoke the contextual tools.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.UpdateView">
            <summary>
            Updates the appearance of the complex segment.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.ConstructComplexGeometry">
            <summary>
            The construct complex geometry.
            </summary>
            <returns>The <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment.ComplexGeometry"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> is a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> representing a segment in a polygonal loop.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.segmentHandle">
            <summary>
            The handle representing the segment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.midPointHandle">
            <summary>
            The handle in the middle of <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.segmentHandle"/>, for creating new polygon vertices.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.segmentDimensionManipulator">
            <summary>
            The <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.SegmentDimensionManipulator"/> for manipulating the dimension the segment.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> class.
            </summary>
            <param name="owningPolygon">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> owning the new node.</param>
            <param name="configuration">The configuration to apply on the node.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.DimensionChanged">
            <summary>
            The measure changed event.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.Segment">
            <summary>
            Gets or sets the segment, as a <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            The setter forwards the end point values to the neighboring <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instances.
            </summary>
            <remarks>
            It is assumed that the there will always be valid vertices as previous and next nodes
            </remarks>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.OriginalSegment">
            <summary>
            Gets the original segment, as it was before any modification.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.StartPoint">
            <summary>
            Gets or sets the location of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> representing the start vertex of the segment.
            Setting this value also affects the vertex's other neighboring <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/>, if any.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.EndPoint">
            <summary>
            Gets or sets the location of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> representing the end vertex of the segment.
            Setting this value also affects the vertex's other neighboring <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/>, if any.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.IsModified">
            <summary>
            Gets a value indicating whether the node has been modified since the last commit.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.Selected">
            <summary>
            Gets a value indicating whether the node is selected.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.Invalid">
            <summary>
            Gets or sets a value indicating whether the node should be treated as invalid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.Priority">
            <summary>
            Gets or sets the priority of the contained segment handle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.Visible">
            <summary>
            Gets a value indicating whether the node is visible.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.VisibleDimensions">
            <summary>
            Gets a value indicating whether any dimensions are visible for the current node.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.IsMidPointSelected">
            <summary>
            Gets a value indicating whether is mid point selected.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.RequestDelete">
            <summary>
            Delete the segment handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.ToggleDimension(System.Boolean)">
            <summary>
            Toggles the dimension.
            </summary>
            <param name="isEnabled">A value indicating whether the dimensions are enabled.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.UpdateDimensions">
            <summary>
            Creates, updates, or disposes <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.segmentDimensionManipulator"/> based on the current state.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.UpdateInputHandle">
            <summary>
            Creates, updates, or disposes <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.midPointHandle"/> based on the current state.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.UpdateTolerationBehavior">
            <summary>
            Updates the configuration for the toleration behavior of the handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.SetHandleSelected(System.Boolean)">
            <summary>
            Selects the handle and, if successful shows the contextual toolbar as specified in <paramref name="invokeContextualTools"/>.
            </summary>
            <param name="invokeContextualTools">Whether to invoke the contextual tools.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.SetHandleSelection(System.Boolean)">
            <summary>
            Sets the handle selection.
            </summary>
            <param name="selected">If true sets the selection true.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.SetSnappable(System.Boolean)">
            <summary>
            Sets a value indicating whether the handle is snappable.
            </summary>
            <param name="snappable">True if the handle is to be snappable; False otherwise.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.OnDragStarted(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            If <paramref name="draggedHandle"/> is <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.midPointHandle"/>, a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> is inserted into the polygon.
            Otherwise, the base class implementation is called.
            </summary>
            <param name="draggedHandle">The sender of the event.</param>
            <param name="eventArgs">The arguments of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.UpdateView">
            <summary>
            Updates the appearance of the segment.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.UpdateSegmentHandle">
            <summary>
            Updates <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.segmentHandle"/> based on the current state.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.OnMeasureChangeStarted(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles the first <see cref="E:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase.MeasureChangeOngoing"/> event
            by wrapping the subsequent event sequence with a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegmentDimensionDragSession"/> instance.
            </summary>
            <param name="dimensionManipulator">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment.OnSegmentManipulatorMeasureChanged(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Called when the segment manipulator measure changed.
            </summary>
            <param name="dimensionManipulator">The dimension manipulator.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> is a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> representing a vertex in a polygonal loop.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.point">
            <summary>
            The polygon point.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.handle">
            <summary>
            The point handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration,Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> class.
            </summary>
            <param name="owningPolygon">The owning polygonal object.</param>
            <param name="configuration">The configuration to apply on the node.</param>
            <param name="polygonPoint">The polygon point of the vertex.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> class.
            </summary>
            <param name="loopVertex">The loop vertex to use for initialization.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Index">
            <summary>
            Gets the index of the current loop vertex in the owning loop node collection.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Point">
            <summary>
            Gets the underlying <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> of the current vertex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Location">
            <summary>
            Gets or sets the location of the current vertex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.OriginalLocation">
            <summary>
            Gets the original location.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.IsModified">
            <summary>
            Gets a value indicating whether the vertex has been modified since the last commit.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Selected">
            <summary>
            Gets a value indicating whether the vertex is selected.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Invalid">
            <summary>
            Gets or sets a value indicating whether the node should be treated as invalid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Visible">
            <summary>
            Gets a value indicating whether the node is visible.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Parent">
            <summary>
            Gets or sets the identifiers of the parent object which is being manipulated.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.Handle">
            <summary>
            Gets the handle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.CreateFromHandle(System.Object,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration,Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint,System.Action{Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex},Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle)">
            <summary>
            Constructs a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> based on the given <paramref name="pointHandle"/>.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="owningPolygon">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection"/> of which the vertex is part.</param>
            <param name="configuration">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ILoopNodeConfiguration"/> to apply on the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</param>
            <param name="location">The location.</param>
            <param name="doInitializeVertex">A delegate to a method that can initialize the constructed <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> instance.</param>
            <param name="pointHandle">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/> to wrap with the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/>.</param>
            <returns>A new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> that is based on the given <paramref name="pointHandle"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.UpdateTolerationBehavior">
            <summary>
            Updates the configuration for the toleration behavior of the handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.UpdateTolerationBehaviorApplyTypeChange">
            <summary>
            Updates the toleration type of the handle, (changed by TAB key or from the contextual tool).
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting">
            <summary>
            <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting"/> class defines restricted toleration behavior settings for handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.restrictedPointHandleTolerationType">
            <summary>
            The restricted point handle toleration type.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting" /> class.
            </summary>
            <param name="source">The source settings to copy from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /></exception>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.Name">
            <summary>
            Gets the name of the restricted toleration behavior setting.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.Description">
            <summary>
            Gets the description of the restricted toleration behavior setting.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.RestrictedPointHandleTolerationType">
            <summary>
            Gets or sets restricted toleration type for point handle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.RestrictedSegmentHandleTolerationType">
            <summary>
            Gets or sets restricted toleration type for segment handle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.CustomPointReferencePlane">
            <summary>
            Gets or sets the reference plane.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when toleration behavior for the point handle needs to be set.
            </summary>
            <param name="handle">Point handle</param>
            <param name="referencePlane">Reference plane</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.ApplyTypeChange(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the toleration type change on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/>.
            </summary>
            <param name="handle">Point handle</param>
            <param name="polygon">The polygon</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when toleration behavior for the segment handle needs to be set.
            </summary>
            <param name="handle">Segment handle</param>
            <param name="referencePlane">Reference plane</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting">
            <summary>
            Abstract <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting"/> class definines toleration behavior settings for handles.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.Name">
            <summary>
            Gets the name of the toleration behavior setting.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.Description">
            <summary>
            Gets the description of the restricted toleration behavior setting.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Called when toleration behavior setting for the handle needs to be set.
            </summary>
            <param name="handle">Handle for which the settings will be applied.</param>
            <param name="polygon">The polygon to consider when applying the configuration.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.ApplyTypeChange(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the toleration type change on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IHandle"/>.
            </summary>
            <param name="handle">Handle for which the settings will be applied.</param>
            <param name="polygon">The polygon to consider when applying the configuration.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.ApplyTypeChange(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Applies the toleration type change on the given <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle"/>.
            </summary>
            <param name="handle">Point handle</param>
            <param name="polygon">The polygon</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.IPointHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when toleration behavior for the point handle needs to be set.
            </summary>
            <param name="handle">Point handle</param>
            <param name="referencePlane">Reference plane</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.TolerationBehaviorSetting.ApplyOn(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle,Tekla.Common.Geometry.Plane3)">
            <summary>
            Called when toleration behavior for the segment handle needs to be set.
            </summary>
            <param name="handle">Segment handle</param>
            <param name="referencePlane">Reference plane</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> class is any end <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> of an open polygonal loop.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex.#ctor(Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> class.
            </summary>
            <param name="loopVertex">The loop vertex to use for initialization.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex.Index">
            <summary>
            Gets the index of the current loop vertex in the owning loop node collection.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex.Next">
            <summary>
            Gets the next node. If this is the last node in the open polygon, null is returned.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex.Previous">
            <summary>
            Gets the previous node. If this is the first node in the open polygon, null is returned.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex.Visible">
            <summary>
            Gets a value indicating whether the node is visible.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2"/> class is the base class for any manipulator targeted at modifying open polygonal objects.
            </summary>
            <seealso cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2"/>
            <typeparam name="TModelObject">The type of <see cref="T:Tekla.Structures.Model.ModelObject"/> manipulated by the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2"/>.</typeparam>
            <typeparam name="TPoint">The <see cref="T:Tekla.Structures.Geometry3d.Point"/> type defining the vertex points of <typeparamref name="TModelObject"/>.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.pickEndVertexTool">
            <summary>
            The pick end vertex tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2"/> class.
            </summary>
            <param name="target">The <typeparamref name="TModelObject"/> to manipulate.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.VertexTool">
            <summary>
            Gets the vertex tool.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.EndVertexTool">
            <summary>
            Gets the end vertex tool.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.SupportedPointTolerationTypes">
            <summary>
            Gets the supported point toleration types.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2.OnInitialize">
            <summary>
            Calls the <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnInitialize"/> method implementation
            and then converts the first and last vertices to <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> values and removes the inter-connecting <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/>.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2">
            <summary>
            The abstract <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2"/> is the base class for any manipulator targeted at modifying polygonal objects.
            The targeted object type must inherit from <see cref="T:Tekla.Structures.Model.ModelObject"/>, and the object must be definable by a sequence of <see cref="T:Tekla.Structures.Geometry3d.Point"/> values.
            </summary>
            <seealso cref="T:Tekla.Structures.Features.Common.PolygonManipulation.ClosedPolygonalObjectManipulator`2"/>
            <seealso cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenPolygonalObjectManipulator`2"/>
            <typeparam name="TModelObject">The type of <see cref="T:Tekla.Structures.Model.ModelObject"/> manipulated by the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2"/>.</typeparam>
            <typeparam name="TPoint">The <see cref="T:Tekla.Structures.Geometry3d.Point"/> type defining the vertex points of <typeparamref name="TModelObject"/>.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.polygonManipulator">
            <summary>
            The polygon manipulator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.expander">
            <summary>
            The expander.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.vertexInsertionTool">
            <summary>
            The vertex insertion tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.#ctor(`0,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2" /> class.
            </summary>
            <param name="target">The <typeparamref name="TModelObject" /> to manipulate.</param>
            <param name="closed">Is the polygon closed.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.NodeSelectionChanged">
            <summary>
            Occurs when the node selection was changed.
            </summary>
            <remarks>
            This property is kept to maintain compatibility with old inherited manipulators.
            Subclasses could attach to the node events in the <see cref="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.polygonManipulator"/> instance.</remarks>
        </member>
        <member name="E:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnModifiedDragEnded">
            <summary>
            Occurs when a ctrl or alt drag is ended.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Configuration">
            <summary>
            Gets the configuration instance to apply on all polygon nodes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.CtrlDragging">
            <summary>
            Gets a value indicating whether ctrl is pressed while dragging an edge or vertex.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Polygon">
            <summary>
            Gets the collection of nodes representing the polygon.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Tools">
            <summary>
            Gets the instance building the contextual tools for the current manipulator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Vertices">
            <summary>
            Gets the vertex points, of type <typeparamref name="TPoint"/>, from <see cref="T:Tekla.Structures.Model.Part"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.ContextualSession">
            <summary>
            Gets the contextual session.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Commit">
            <summary>
            Commits the current polygon to the model.
            </summary>
            <returns>True if the commit was successful; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Cancel">
            <summary>
            Cancels all ongoing modifications.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnCommittingChanges">
            <summary>
            When overridden, prepares the <see cref="P:Tekla.Structures.DirectManipulation.Model.ModelObjectManipulator`1.Target"/> instance for a model commit.
            <see cref="P:Tekla.Structures.DirectManipulation.Model.ModelObjectManipulator`1.Target"/> should be prepared according to the
            <typeparamref name="TPoint"/> instances in the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.Vertices"/> property.
            </summary>
            <returns>True if the commit can continue; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnNodeDeletion(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode,Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeEventArgs)">
            <summary>
            Handles the <see cref="E:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode.DeleteRequested"/> event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="eventArgs">The loop node event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnInitialize">
            <summary>
            Initializes the polygonal object manipulator.
            When overridden, should be called first.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnTargetObjectUpdated(`0)">
            <summary>
            Handles changes of the <see cref="T:Tekla.Structures.Model.ModelObject"/> instance behind the <see cref="P:Tekla.Structures.DirectManipulation.Model.ModelObjectManipulator`1.Target"/> property.
            <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.UpdateView"/> is automatically called when this method is invoked by the base class' <see cref="M:Tekla.Structures.DirectManipulation.Model.ModelObjectManipulator`1.Update(`0)"/> method.
            </summary>
            <param name="oldInstance">The previous instance set to <see cref="P:Tekla.Structures.DirectManipulation.Model.ModelObjectManipulator`1.Target"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.UpdateView">
            <summary>
            Updates the appearance of the polygon.
            When overridden, should be called first.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.ResetPolygon">
            <summary>
            Reset the polygon manipulator contour definition.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2.OnCommit">
            <summary>
            Occurs on committing the current polygon to the model.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration"/> class manages the configuration of a <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulator`2"/>,
            it also provides the contextual tool options affecting the configuration.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration"/> class
            with no tools enabled.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Common">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.ShowDirectionGraphic">
            <summary>
            Gets or sets a value indicating whether to show direction graphic.
            </summary>
            <value>
            <c>true</c> if showing direction graphic enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.EndVertex">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.OpenLoopEndVertex"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Segment">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopSegment"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.ComplexSegment">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopComplexSegment"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Vertex">
            <summary>
            Gets the collection of tools available for all <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex"/> items.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.EnabledHandleTypes">
            <summary>
            Gets or sets which types of handles are visible.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.DimensionsConfiguration">
            <summary>
            Gets the configuration instance affecting the dimensions for the loop nodes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.DragConfiguration">
            <summary>
            Gets the configuration instance affecting the drag behavior of the loop nodes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.HandleAppearance">
            <summary>
            Gets or sets the appearance of handles.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.AllowPolygonDelete">
            <summary>
            Gets or sets a value indicating whether the whole polygon is allowed to be deleted.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.AllowCtrlDragCopy">
            <summary>
            Gets or sets a value indicating whether the polygon is allowed to be copied by ctrl-drag.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Tools">
            <summary>
            Gets the tools.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.GetContextualToolsFor(Tekla.Structures.Features.Common.PolygonManipulation.LoopNode)">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to build a contextual tool from for the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.
            </summary>
            <param name="node">The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/> to get the contextual tool items for.</param>
            <returns>The <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to build a contextual tool from for the given <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.LoopNode"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Add``1(Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool{``0})">
            <summary>
            Adds the contextual tools to the loop nodes of type <typeparamref name="TNode" />.
            </summary>
            <typeparam name="TNode">The type of the node.</typeparam>
            <param name="tool">The tool for the loop node.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Remove``1">
            <summary>
            Removes the tool of type <typeparamref name="TTool"/> from all tool collections.
            </summary>
            <typeparam name="TTool">The type of tool to remove.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Remove(Tekla.Structures.Features.Common.PolygonManipulation.ContextualTools.ContextualToolType)">
            <summary>
            Removes all tools having <paramref name="toolType"/> as their <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool.ToolType"/> property.
            </summary>
            <param name="toolType">The type of tool to remove.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Clear">
            <summary>
            Clears all tools.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.Attach(Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Attaches the tools to the <paramref name="manipulatorManager" />.
            </summary>
            <param name="manipulatorManager">The manipulator manager.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="manipulatorManager" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.RemoveTools``1(System.Collections.Generic.ICollection{Tekla.Structures.Features.Common.PolygonManipulation.IContextualTool{``0}},System.Func{System.Object,System.Boolean})">
            <summary>
            Removes all tools matching the given <paramref name="predicate" /> from the <paramref name="tools" /> collection.
            </summary>
            <typeparam name="TNodeType">The node type.</typeparam>
            <param name="tools">The tools.</param>
            <param name="predicate">A delegate to the function determining whether or not a tool can be removed.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectManipulatorConfiguration.RemoveTools(System.Func{System.Object,System.Boolean})">
            <summary>
            Removes all tools matching the given <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A delegate to the function determining whether or not a tool can be removed.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper"/> class contains
            extension methods for the linked list of loop nodes.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper.CommitVertexPointsTo(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection,System.Collections.IList)">
            <summary>
            Commits the given list of nodes to <paramref name="vertices"/>.
            </summary>
            <param name="nodeCollection">The collection of nodes to commit to <paramref name="vertices"/>.</param>
            <param name="vertices">The target <see cref="T:System.Collections.IList"/> for the <see cref="T:Tekla.Structures.Geometry3d.Point"/> instances in <paramref name="nodeCollection"/>.</param>
            <returns>True if anything changed in <paramref name="vertices"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper.InsertNewVerticesTo(System.Collections.Generic.IEnumerable{Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex},System.Collections.IList)">
            <summary>
            Inserts new vertices to the <paramref name="vertices"/>.
            </summary>
            <param name="loopVertices">The collection to check for new vertices.</param>
            <param name="vertices">The collection to add the new vertices.</param>
            <returns>True if new vertices were inserted to <paramref name="vertices"/>; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper.RemoveDuplicateVertices(Tekla.Structures.Features.Common.PolygonManipulation.LoopNodeCollection)">
            <summary>
            Removes the duplicate vertices from the <paramref name="nodeCollection"/>.
            </summary>
            <param name="nodeCollection">The collection of current nodes.</param>
            <returns>True if duplicates were found; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonalObjectNodeLoopHelper.RemoveNonExistingVerticesFrom(System.Collections.Generic.IEnumerable{Tekla.Structures.Features.Common.PolygonManipulation.LoopVertex},System.Collections.IList)">
            <summary>
            Removes non existing vertices from the <paramref name="vertices"/>.
            </summary>
            <param name="loopVertices">The collection to check for non existing vertices.</param>
            <param name="vertices">The collection to remove the non existing vertices from.</param>
            <returns>True if non existing vertices were removed from <paramref name="vertices"/>; Otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> class wraps a <see cref="T:Tekla.Structures.Geometry3d.Point"/> instance.
            </summary>
            <remarks>
            The class indicates any modifications of this <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>, through the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/> property.
            The wrapped <see cref="T:Tekla.Structures.Geometry3d.Point"/> instance can be switched during runtime by calling <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset(Tekla.Structures.Geometry3d.Point)"/>.
            </remarks>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.forcedModified">
            <summary>
            The value indicating whether <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/> has been set to true
            and/or whether the last call to <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset(Tekla.Structures.Geometry3d.Point)"/> is forcing the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/> property to be true.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.#ctor(Tekla.Structures.Geometry3d.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> class.
            <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset"/> is automatically called by the constructor.
            </summary>
            <param name="point">The instance to set to <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point">
            <summary>
            Gets the underlying <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/> instance.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.OriginalLocation">
            <summary>
            Gets the location of the point after latest commit, i.e. the unmodified position.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation">
            <summary>
            Gets the current location of the polygon point.
            If different from the location of <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>, the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> is considered as <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> is modified.
            The value is automatically reset to false on <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Commit"/> or <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.IsNew">
            <summary>
            Gets a value indicating whether the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> has been created by <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CreateNew``1(Tekla.Common.Geometry.Vector3)"/>,
            and has not yet been committed by <see cref="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Commit"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CreateNew``1(Tekla.Common.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> with underlying <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/> of type <typeparamref name="TPoint"/>.
            Both the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/> and <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> coordinates are set to those of <paramref name="pointLocation"/>.
            The <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.IsNew"/> property is set to true.
            </summary>
            <typeparam name="TPoint">The type of <see cref="T:Tekla.Structures.Geometry3d.Point"/> to create.</typeparam>
            <param name="pointLocation">A <see cref="T:Tekla.Common.Geometry.Vector3"/> value providing the coordinates for the new <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/>.</param>
            <returns>A newly created <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/>, with the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.IsNew"/> property set to true.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Commit">
            <summary>
            Commits the value of <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> to <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Equivalent(Tekla.Common.Geometry.Vector3)">
            <summary>
            Determines tolerated equality between the given <see cref="T:Tekla.Common.Geometry.Vector3"/> and the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> value.
            </summary>
            <param name="otherPoint">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to compare <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> with.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Vector3"/> is considered as equal to the <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modify(Tekla.Common.Geometry.Vector3)">
            <summary>
            Modifies <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> to match <paramref name="newPointLocation"/>.
            </summary>
            <param name="newPointLocation">The <see cref="T:Tekla.Common.Geometry.Vector3"/> value to set to <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset">
            <summary>
            Resets the value of <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/> to match <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>.
            This also resets <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/> if not <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.IsNew"/>.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Reset(Tekla.Structures.Geometry3d.Point)">
            <summary>
            Updates the underlying <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/> instance.
            If <paramref name="point"/>'s coordinates are beyond toleration with the old <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.CurrentLocation"/>,
            the <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/> becomes <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/>.
            Otherwise <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Modified"/> is set to false, if not <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.IsNew"/>.
            </summary>
            <param name="point">The instance to set to <see cref="P:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.Point"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of the current <see cref="T:Tekla.Structures.Features.Common.PolygonManipulation.PolygonPoint"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PositionOffsetHelper">
            <summary>
            Position calculation for placing tool.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetProfileAndPositionOffsets(Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="minPoint">The minimum point.</param>
            <param name="maxPoint">The maximum point.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.SetSingleInputPointExtremaValues(Tekla.Structures.Model.Position,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Double,System.Double,Tekla.Structures.Geometry3d.OBB@,Tekla.Common.Geometry.Vector3@,Tekla.BIM.Geometry.CoordinateSystem3@)">
            <summary>
            Sets the extrema values of the custom part with one single input point.
            </summary>
            <param name="item">The item.</param>
            <param name="minPoint">The minimum point.</param>
            <param name="maxPoint">The maximum point.</param>
            <param name="sine">The sine.</param>
            <param name="cosine">The cosine.</param>
            <param name="extremaBox">Extrema box.</param>
            <param name="extremaOffset">Extrema offset.</param>
            <param name="extremaCoordinateSystem">Extrema coordinate system.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.SetTwoInputPointsExtremaValues(Tekla.Structures.Model.Position,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Double,System.Double,Tekla.Structures.Geometry3d.OBB@,Tekla.Common.Geometry.Vector3@,Tekla.BIM.Geometry.CoordinateSystem3@)">
            <summary>
            Sets the extrema values of the custom part with two input points.
            </summary>
            <param name="item">The item.</param>
            <param name="minPoint">The minimum point.</param>
            <param name="maxPoint">The maximum point.</param>
            <param name="sine">The sine.</param>
            <param name="cosine">The cosine.</param>
            <param name="extremaBox">Extrema box.</param>
            <param name="extremaOffset">Extrema offset.</param>
            <param name="extremaCoordinateSystem">Extrema coordinate system.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetRotationAngleInRadians(Tekla.Structures.Model.Position)">
            <summary>
            Gets the rotation angle in radians.
            </summary>
            <param name="item">The item.</param>
            <returns>
            The rotation angle in radians.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetProfileAndPositionOffsetsForTopRotation(Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType,System.Double,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets for <see cref="F:Tekla.Structures.Model.Position.RotationEnum.TOP" />.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="height">The profile height.</param>
            <param name="width">The profile width.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.ApplyDepthValueForTopOrBelowRotationTwoPoints(Tekla.Structures.Model.Position,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Applies the depth value when the part has top or below rotation and the part has been created with two input points.
            </summary>
            <param name="item">The item.</param>
            <param name="height">The profile height.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="profileOffset">The profile offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.ApplyPlaneValueForTopOrBelowRotation(Tekla.Structures.Model.Position,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Applies the plane value when the part has top or below rotation.
            </summary>
            <param name="item">The item.</param>
            <param name="width">The profile width.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="profileOffset">The profile offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetProfileAndPositionOffsetsForBelowRotation(Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType,System.Double,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets for <see cref="F:Tekla.Structures.Model.Position.RotationEnum.BELOW" />.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="height">The profile height.</param>
            <param name="width">The profile width.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetProfileAndPositionOffsetsForFrontRotation(Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType,System.Double,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets for <see cref="F:Tekla.Structures.Model.Position.RotationEnum.FRONT" />.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="height">The profile height.</param>
            <param name="width">The profile width.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.GetProfileAndPositionOffsetsForBackRotation(Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType,System.Double,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets for <see cref="F:Tekla.Structures.Model.Position.RotationEnum.BACK" />.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="height">The profile height.</param>
            <param name="width">The profile width.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.ApplyDepthValueForFrontOrBackRotation(Tekla.Structures.Model.Position,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Applies the depth value when the part has front or back rotation.
            </summary>
            <param name="item">The item.</param>
            <param name="width">The profile width.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="profileOffset">The profile offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.ApplyPlaneValueForFrontOrBackRotationOnePoint(Tekla.Structures.Model.Position,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Applies the plane value when the part has front or back rotation and the part has been created with one input point.
            </summary>
            <param name="item">The item.</param>
            <param name="height">The profile height.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="profileOffset">The profile offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.ApplyPlaneValueForFrontOrBackRotationTwoPoints(Tekla.Structures.Model.Position,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Applies the plane value when the part has front or back rotation and the part has been created with two input points.
            </summary>
            <param name="item">The item.</param>
            <param name="height">The profile height.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="profileOffset">The profile offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PositionOffsetHelper.TransformWithPositionValues(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Double,System.Double,Tekla.Common.Geometry.Vector3@,Tekla.Structures.Features.Common.InputPointType)">
            <summary>
            Transforms the given point using the given position values.
            </summary>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="sine">The sine of the rotation angle.</param>
            <param name="cosine">The cosine of the rotation angle.</param>
            <param name="point">The point to transform.</param>
            <param name="inputPointType">Input point type.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.accept">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.AddVertex">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.AngleControl">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.cancel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_arc">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_arc_point">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_line">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_line_and_arc">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_none">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_rounding">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_square">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.Chamfer_square_parallel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.ConicalBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateArcBy3Points">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateArcByCenterAndEndPoints">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateArcByTangentAndEndPoints">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateByFacesBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateByPartsBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateCircleBy3Points">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateCircleByCenterAndEndPoints">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateCircleByCenterPointAndRadius">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateLine">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CreateTangentLine">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.CylindricalBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.DragLongitudinal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.DragPerpendicular">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.EnableMidPointHandles">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.LoftedPlateBy2Objects">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.LoftedPlateByObjectAndPoint">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.NarrowBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.RemoveBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.SetMainSection">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.SetSnapPlane">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.TaperedBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.TolerationBehavior">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.TolerationBehavior1D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.TolerationBehavior2D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.TolerationBehavior3D">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.VisibleNonAxisAlignedDimensions">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ToolbarBitmaps.Modify.WideBend">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.PointTolerationTypes">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.PointTolerationTypes" /> enum defines the toleration type for loop vertex dragging.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.PointTolerationTypes.Unrestricted">
            <summary>
            The unrestricted snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.PointTolerationTypes.Line">
            <summary>
            The line snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.PointTolerationTypes.DefaultPlane">
            <summary>
            The polygon plane snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.PointTolerationTypes.CustomPlane">
            <summary>
            The custom plane snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.PointTolerationTypes.AlongLine">
            <summary>
            The along line snapping.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1" /> creates the contextual tools for toggling the toleration behaviors for point targets.
            </summary>
            <typeparam name="TTarget">The type of the target.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.facePicker">
            <summary>
            The face picker.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.customPlaneState">
            <summary>
            The custom plane state
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1" /> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.Types">
            <summary>
            Gets or sets the toleration types.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.IsAlongineTolerationApplicable">
            <summary>
            Gets or sets a value indicating whether middle line toleration is applicable.
            </summary>
            <value>
            <c>true</c> if this instance is middle line toleration applicable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.Id">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.UnrestrictedTolerationName">
            <summary>
            Gets the name of the unrestricted toleration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.DefaultPlaneTolerationName">
            <summary>
            Gets the name of the default plane toleration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.CustomPlaneTolerationName">
            <summary>
            Gets the name of the custom plane toleration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.LineTolerationName">
            <summary>
            Gets the name of the line toleration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.MiddleLineTolerationName">
            <summary>
            Gets the name of the middle line toleration.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.GetTolerationState(Tekla.Structures.Features.Common.Tools.PointTolerationTypes,System.Nullable{Tekla.Common.Geometry.Plane3})">
            <summary>
            Gets the persistent state object of the toleration setting.
            </summary>
            <param name="pointTolerationTypes">The point toleration types.</param>
            <param name="customPlane">The custom plane.</param>
            <returns>The persistent state object of the toleration setting.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.ApplyOn(`0,Tekla.Structures.Features.Common.Tools.PointTolerationTypes,System.Nullable{Tekla.Common.Geometry.Plane3})">
            <summary>
            Applies the toleration behavior on the <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <param name="tolerationTypes">The toleration types.</param>
            <param name="customPlane">The custom plane, if any.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.CreateNewControls(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.ApplyOn(System.Object,`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.GetTolerationState(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.CreateToggleButtons(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.AcceptAccelerator">
            <summary>
            Gets a value indicating whether to accept the accelerator key input.
            </summary>
            <returns>A value indicating whether to accept the accelerator key input.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.GetCustomPlane(`0)">
            <summary>
            Gets the custom toleration plane for the <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>The custom toleration plane for the <paramref name="target"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.Is3DToleration(`0)">
            <summary>
            Determines whether the 3D toleration is active for the specified <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the 3D toleration is active for the specified <paramref name="target"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.Set3DToleration(`0)">
            <summary>
            Sets 3D toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>True on success; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.IsCustomPlaneToleration(`0)">
            <summary>
            Determines whether the custom plane toleration is active for the specified <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the custom plane toleration is active for the specified <paramref name="target"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.SetCustomPlaneToleration(`0,Tekla.Common.Geometry.Plane3)">
            <summary>
            Sets plane-restricted toleration behavior.
            </summary>
            <param name="target">The target.</param>
            <param name="plane">The plane.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.IsDefaultPlaneToleration(`0)">
            <summary>
            Determines whether the default plane toleration is active for the specified <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the default plane toleration is active for the specified <paramref name="target"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.SetDefaultPlaneToleration(`0)">
            <summary>
            Sets default plane toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>True on success; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.IsLineToleration(`0)">
            <summary>
            Determines whether the line toleration is active for the specified <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the line toleration is active for the specified <paramref name="target"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.SetLineToleration(`0)">
            <summary>
            Sets line toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>True on success; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.IsAlongLineToleration(`0)">
            <summary>
            Determines whether the along the line toleration is active for the specified <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the along the line toleration is active for the specified <paramref name="target"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.SetAlongLineToleration(`0)">
            <summary>
            Sets the along the line toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>True on success; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.OnSelectCustomPlane(`0)">
            <summary>
            Called when users start to select custom plane.
            </summary>
            <param name="target">The target node.</param>
            <returns>True on success; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointTolerationBehaviorTool`1.OnPickedFace(`0,Tekla.BIM.Geometry.Face3)">
            <summary>
            Called when a face has been picked.
            </summary>
            <param name="target">The target.</param>
            <param name="face">The picked face.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool" /> creates the contextual tools for toggling the toleration behaviors for point handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.GetCustomPlane(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.Is3DToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.IsCustomPlaneToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.IsDefaultPlaneToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.IsLineToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.Set3DToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.SetCustomPlaneToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.Common.Geometry.Plane3)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.SetDefaultPlaneToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetPointHandleTolerationBehaviorTool.SetLineToleration(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool" /> creates the contextual tools for toggling the toleration behaviors for segment targets.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.Is3DToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.Set3DToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.IsLongitudinalToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.SetLongitudinalToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.IsPerpendicularToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentHandleTolerationBehaviorTool.SetPerpendicularToleration(Tekla.BIM.DirectManipulation.Services.Interaction.ISegmentHandle)">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes" /> enum defines the toleration type for loop segment dragging.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes.Unrestricted">
            <summary>
            The unrestricted snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes.Longitudinal">
            <summary>
            The parallel snapping.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SegmentTolerationTypes.Perpendicular">
            <summary>
            The perpendicular snapping.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1" /> creates the contextual tools for toggling the toleration behaviors for segment targets.
            </summary>
            <typeparam name="TTarget">The type of the target.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1" /> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.Types">
            <summary>
            Gets or sets the toleration types.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.Id">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.GetTolerationState(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.ApplyOn(System.Object,`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.CreateToggleButtons(`0)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.Is3DToleration(`0)">
            <summary>
            Determines whether the 3D toleration is active for the specified <paramref name="target" />.
            </summary>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if the 3D toleration is active for the specified <paramref name="target" />; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.Set3DToleration(`0)">
            <summary>
            Sets 3D toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>
            True on success; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.IsLongitudinalToleration(`0)">
            <summary>
            Determines whether the longitudinal toleration is active for the specified <paramref name="target" />.
            </summary>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if the longitudinal toleration is active for the specified <paramref name="target" />; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.SetLongitudinalToleration(`0)">
            <summary>
            Sets the longitudinal toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>
            True on success; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.IsPerpendicularToleration(`0)">
            <summary>
            Determines whether the perpendicular toleration is active for the specified <paramref name="target" />.
            </summary>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if the perpendicular toleration is active for the specified <paramref name="target" />; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetSegmentTolerationBehaviorTool`1.SetPerpendicularToleration(`0)">
            <summary>
            Sets the perpendicular toleration.
            </summary>
            <param name="target">The target.</param>
            <returns>
            True on success; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="target" /></exception>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase" /> creates the tool used for toggling between the toleration behavior settings.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.PointTolerationId">
            <summary>
            The point toleration session identifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.SegmentTolerationId">
            <summary>
            The point toleration session identifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.ModelEvents">
            <summary>
            The model events
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.resetSavedTolerationStates">
            <summary>
            The reset saved toleration states flag
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase" /> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.ToolType">
            <summary>
            Gets the type of the tool.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.Accelerator">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Interaction.Keys"/> accelerator.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.SessionName">
            <summary>
            Gets the session name.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.Id">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.SessionStore">
            <summary>
            Gets the session store.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.OnInitialize">
            <summary>
            Performs the required actions to initialize the manipulator,
            all properties of the <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.Manipulator" /> class are set at this point.
            After this method returns, <see cref="P:Initialized" /> is set to true and <see cref="M:UpdateView" /> is called.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.OnTeklaStructuresExit">
            <summary>
            Called when tekla structures exits.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorToolBase.OnModelLoaded">
            <summary>
            Called when model is loaded.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2" /> creates the contextual tools for toggling the toleration behaviors.
            </summary>
            <typeparam name="TTarget">The type of the target.</typeparam>
            <typeparam name="TTypes">The allowed toleration types.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.toggleButton">
            <summary>
            The toggle button.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.Changed">
            <summary>
            Occurs when the toleration behavior has been changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.ActiveButton">
            <summary>
            Gets the active button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.CreateNewControls(`0)">
            <summary>
            Creates a new set of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instance for interacting with the tool from the <paramref name="target"/>'s contextual tools.
            </summary>
            <param name="target">The node for which the contextual tool is being built.</param>
            <returns>A sequence of <see cref="T:Tekla.BIM.DirectManipulation.Services.Controls.ControlBase"/> instances to add to the contextual tool.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.InvokeByAccelerator(`0,Tekla.BIM.DirectManipulation.Services.Interaction.Keys)">
            <summary>
            Invokes the tool functionality by using the accelerator key.
            </summary>
            <param name="sender">The sender.</param>
            <param name="accelerator">The accelerator key pressed by the user.</param>
            <returns>True on success; Otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.OnToggleButtonClicked(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Called when the toggle button is clicked.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.UpdateButton">
            <summary>
            Updates the button image based on the active toleration type.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.OnTolerationBehaviorChanged(`0,`1,System.Boolean)">
            <summary>
            Called when the toleration behavior has been updated.
            </summary>
            <param name="target">The target.</param>
            <param name="tolerationTypes">The toleration types.</param>
            <param name="saveState">A value indicating whether to save state.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.OnTolerationBehaviorChanged(`0,`1)">
            <summary>
            Called when the toleration behavior has been updated.
            </summary>
            <param name="target">The target.</param>
            <param name="tolerationTypes">The toleration types.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target"/></exception>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.AcceptAccelerator">
            <summary>
            Gets a value indicating whether to accept the accelerator key input.
            </summary>
            <returns>A value indicating whether to accept the accelerator key input.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.ApplyOn(System.Object,`0)">
            <summary>
            Applies the toleration behavior on the <paramref name="target" />.
            </summary>
            <param name="state">The state.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.CreateToggleButtons(`0)">
            <summary>
            Creates the toggle buttons for switching the toleration type, with its associated handler.
            </summary>
            <param name="target">The target.</param>
            <returns> The toggle buttons for switching the toleration type, with its associated handler.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.GetTolerationState(`0)">
            <summary>
            Gets the state of the toleration based on the <paramref name="target"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>The state of the toleration based on the <paramref name="target"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.UpdateTolerationBehavior(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Updates the toleration behavior.
            </summary>
            <param name="sender">The sender.</param>
            <returns>True on success; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.SetTolerationBehaviorTool`2.SwitchToggle(Tekla.BIM.DirectManipulation.Services.Controls.ICheckControl,Tekla.BIM.DirectManipulation.Services.Controls.ToggleButtonControl)">
            <summary>
            Switches the checked toggle button control.
            </summary>
            <param name="activeButton">The currently active toggle button.</param>
            <param name="newButton">The new active toggle button.</param>
            <returns>True on success; otherwise, false.
            </returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.FacePicker">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.FacePicker"/> class is a manipulator used for picking face with preview graphics.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.Tools.FacePicker.FacePicked">
            <summary>
            Occurs when a face has been picked.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.FacePicker.Picking">
            <summary>
            Gets a value indicating whether this <see cref="T:Tekla.Structures.Features.Common.Tools.FacePicker"/> is picking.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.FacePicker.Start">
            <summary>
            Starts this picking.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.FacePicker.OnPlanePicked(Tekla.BIM.DirectManipulation.Services.Picking.IPickerListener,Tekla.BIM.DirectManipulation.Services.Picking.SinglePickCompletedEventArgs)">
            <summary>
            Called when the plane has been picked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Picking.SinglePickCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.FacePicker.OnPickPointToleration(Tekla.BIM.DirectManipulation.Services.Picking.IPickerListener,Tekla.BIM.DirectManipulation.Services.Picking.PickPointResolveEventArgs)">
            <summary>
            Called when the pick point is being tolerated.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Tekla.BIM.DirectManipulation.Services.Picking.PickPointResolveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder"/> class contains methods for getting 
            contextual tools with different kind of content.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.#ctor(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder"/> class.
            </summary>
            <param name="defaultDimensionOrientation">
            The default dimension orientation setting.
            </param>
            <param name="optionalDimensionOrientation">
            The optional dimension orientation setting.
            </param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.DimensionsVisibilityButton">
            <summary>
            Gets or sets the dimensions visibility contextual tool button.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.TolerationBehaviorButton">
            <summary>
            Gets or sets the toleration behavior contextual tool button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.GetForDimensionsVisibility(Tekla.BIM.DirectManipulation.Services.Controls.IControlsService,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Gets the dimensions visibility contextual tool having 
            only the diagonal dimensions visibility button added on it.
            </summary>
            <param name="controlsService">
            The controls service.
            </param>
            <param name="selectedDimensionOrientation">
            The selected dimension orientation setting.
            </param>
            <returns>
            The dimension visibility contextual tools.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.GetForDimensionsVisibilityAndTolerationBehavior(Tekla.BIM.DirectManipulation.Services.Controls.IControlsService,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes,Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes)">
            <summary>
            Gets a contextual tool having the dimensions visibility button and 
            the toleration behavior button added on it.
            </summary>
            <param name="controlsService">
            The controls service.
            </param>
            <param name="selectedDimensionOrientation">
            The selected dimension orientation setting.
            </param>
            <param name="restrictedToleration">
            The restricted toleration behavior setting.
            </param>
            <returns>
            A contextual tool having the dimension visibility button and
            toleration behavior button added on it.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.ContextualToolsBuilder.GetForTolerationBehavior(Tekla.BIM.DirectManipulation.Services.Controls.IControlsService,Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes)">
            <summary>
            Gets a contextual tool having only the toleration behavior button added on it.
            </summary>
            <param name="controlsService">
            The controls service.
            </param>
            <param name="restrictedToleration">
            The restricted toleration behavior setting.
            </param>
            <returns>
            A contextual tool having the toleration behavior button added on it.
            </returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton"/> class represents the dimensions visibility contextual tools
            of a manipulated object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.diagonalDimensionsVisibilityButton">
            <summary>
            Represents the diagonal dimensions button from the contextual tools.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.defaultDimensionsOrientationOption">
            <summary>
            Represents the default dimensions orientation option.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.optionalDimensionsOrientationOption">
            <summary>
            Represents the optional dimensions orientation option.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.selectedDimensionsOrientationOption">
            <summary>
            Represents the selected dimensions orientation option.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.#ctor(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes,Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton"/> class.
            </summary>
            <param name="defaultDimensionsOrientationOption">
            The default dimensions orientation option.
            </param>
            <param name="optionalDimensionsOrientationOption">
            The optional dimensions orientation option.
            </param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.DimensionsOrientationOptionChangedEventHandler">
            <summary>
            Defines the signature of the event handlers of the dimensions orientation option changed event.
            </summary>
            <param name="selectedDimensionsOrientationOption">
            The selected dimensions orientation option.
            </param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.DimensionsOrientationOptionChanged">
            <summary>
            Represents the event which is raised when the dimensions orientation option was changed.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.GetDiagonalDimensionsVisibilityButton(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionOrientationTypes)">
            <summary>
            Gets the diagonal dimensions visibility button.
            </summary>
            <param name="selectedDimensionsVisibilityOrientationOption">
            The selected dimensions visibility orientation option.
            </param>
            <returns>
            The dimensions visibility button.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.OnDiagonalDimensionsVisibilityButtonClicked(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Called after the diagonal dimensions visibility button from the contextual tool was clicked.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.DimensionsVisibilityContextualToolButton.SetSettingsForDiagonalDimensionsVisibilityButton">
            <summary>
            Sets the settings for the diagonal dimensions visibility button.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton"/> class represents the toleration contextual tool button
            of a manipulated object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.tolerationBehaviorButton">
            <summary>
            Represents the toleration behavior button from the contextual tool.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.selectedTolerationBehaviorOption">
            <summary>
            Represents the selected toleration behavior option.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton"/> class.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.TolerationBehaviorOptionChangedEventHandler">
            <summary>
            Defines the signature of the event handlers of the toleration behavior option changed event.
            </summary>
            <param name="selectedTolerationOption">
            The selected toleration behavior option.
            </param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.TolerationBehaviorOptionChanged">
            <summary>
            Represents the event which is raised when the toleration behavior option was changed.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.GetTolerationBehaviorButton(Tekla.Structures.Features.Common.PolygonManipulation.RestrictedTolerationTypes)">
            <summary>
            Gets the toleration behavior button.
            </summary>
            <param name="selectedTolerationOption">
            The selected toleration behavior option.
            </param>
            <returns>
            The created toleration behavior button.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.OnTolerationBehaviorButtonClicked(Tekla.BIM.DirectManipulation.Services.Controls.ControlBase)">
            <summary>
            Called after the toleration behavior button from the contextual tool was clicked.
            </summary>
            <param name="sender">
            The sender.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.TolerationBehaviorContextualToolButton.SetSettingsForTolerationBehaviorButton">
            <summary>
            Sets the settings for the toleration behavior button.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2"/> class defines a tag containing data for toggling toleration state.
            </summary>
            <typeparam name="TTarget">The type of the target.</typeparam>
            <typeparam name="TToolTypes">The type of the tool types.</typeparam>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2.#ctor(`0,System.Func{`0,System.Boolean},`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
            <param name="types">The allowed toleration types.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2.Target">
            <summary>
            Gets the target.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2.Handler">
            <summary>
            Gets the handler.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.Tools.TolerationToolTag`2.Types">
            <summary>
            Gets the types.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics">
            <summary>
            The polymesh drawing class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.DrawPreview(Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,System.Collections.Generic.IEnumerable{Tekla.Structures.Geometry3d.FacetedBrep},System.Collections.Generic.IReadOnlyList{Tekla.Common.Geometry.Vector3})">
            <summary>
            Draws the preview polymeshes using the given graphics context.
            </summary>
            <param name="graphics">The graphics context.</param>
            <param name="polymeshes">The polymeshes.</param>
            <param name="pickedPoints">
            The list of points that were used to create the polymeshes.
            If this parameter is not null or empty, the first vertical segment can be snapped to.
            </param>
            <returns>True if the preview was drawn; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.GetEdges(Tekla.Structures.Geometry3d.FacetedBrep[])">
            <summary>
            Gets edges from the <paramref name="polymeshes"/>.
            Please note that this implementation leaves all edges of all faces,
            therefore leaving two opposing edges between two faces. If you wish
            to get only one edge between two faces, call <see cref="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.GetUniqueEdges(Tekla.Structures.Geometry3d.FacetedBrep[])"/>.
            </summary>
            <param name="polymeshes">The polymeshes.</param>
            <returns>The edges.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.GetUniqueEdges(Tekla.Structures.Geometry3d.FacetedBrep[])">
            <summary>
            The same as <see cref="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.GetEdges(Tekla.Structures.Geometry3d.FacetedBrep[])"/> but removes the same but opposing edges, therefore
            leaving only one edge between two faces
            </summary>
            <param name="polymeshes">The polymeshes</param>
            <returns>unique edges of the polymeshes</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.RemoveOpposingSegments(System.Collections.Generic.IList{Tekla.Common.Geometry.Segment3})">
            <summary>
            Removes same but opposing segments from a list of segments
            </summary>
            <param name="edgesInLocalCoord">The list where opposing edges are removed</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.Polymesh.PolymeshGraphics.IsPolylineValid(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Determines whether the polyline is self-intersecting or if it has edges that are too small.
            </summary>
            <param name="polyLine">The list of vectors defining the polyline.</param>
            <returns>True if the polyline is valid; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets"/> class contains methods for calculating circle profile offsets.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets.GetCenterPointOffset(Tekla.Structures.Model.Beam,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the offset to be applied to the profile center point.
            </summary>
            <param name="beam">The beam.</param>
            <param name="positionOffset">The beam position offset.</param>
            <param name="axisY">The Y-axis of the beam.</param>
            <param name="axisZ">The cross product of the X-axis and Y-axis of the beam.</param>
            <returns>The offset to be applied to the profile center point.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets.GetProfileOffset(Tekla.Structures.Model.Beam,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the offset to be applied to the profile.
            </summary>
            <param name="beam">The beam.</param>
            <param name="profileOffset">The beam profile offset.</param>
            <param name="axisY">The Y-axis of the beam.</param>
            <param name="axisZ">The cross product of the X-axis and Y-axis of the beam.</param>
            <returns>The offset to be applied to the profile.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets.GetOffsetToBeAppliedForMiddleDepth(Tekla.Structures.Model.Position.RotationEnum,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the offset to be applied when the <see cref="T:Tekla.Structures.Model.Position.DepthEnum"/> depth type is MIDDLE.
            </summary>
            <param name="positionRotation">The position rotation value.</param>
            <param name="profileOffset">The part profile offset.</param>
            <param name="axisY">The Y-axis of the part.</param>
            <param name="axisZ">The cross product of the X-axis and Y-axis of the part.</param>
            <returns>The offset to be applied.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfileOffsets.GetCommonProfileOffset(Tekla.Structures.Model.Position.RotationEnum,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the profile offset; common to both beams and columns.
            </summary>
            <param name="positionRotation">The <see cref="T:Tekla.Structures.Model.Position.RotationEnum"/> rotation type.</param>
            <param name="positionOffset">The position offset.</param>
            <param name="axisY">The Y-axis of the part.</param>
            <param name="axisZ">The cross product of the X-axis and Y-axis of the part.</param>
            <returns>The profile offset.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile"/> class represents a rectangle profile of a beam.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.faces">
            <summary>
            The faces.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.faceHandles">
            <summary>
            The face handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.rectangleProfileHelper">
            <summary>
            The rectangle profile helper.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.lastActiveFace">
            <summary>
            The last active face.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.#ctor(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile"/> class.
            </summary>
            <param name="profileInformation">The beam profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.MoveStartFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the start face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.MoveStartFace(System.Double)">
            <summary>
            Moves the start face.
            </summary>
            <param name="distance">The distance to move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.MoveEndFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the end face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.MoveEndFace(System.Double)">
            <summary>
            Moves the end face.
            </summary>
            <param name="distance">The distance to move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.MoveReferencePoints(System.Double,System.Double,System.Int32)">
            <summary>
            Moves the reference points.
            </summary>
            <param name="modifiedHeightChange">The modified height change.</param>
            <param name="modifiedWidthChange">The modified width change.</param>
            <param name="handleTag">The handle tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.FaceHandleHighlightChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Raised when the face handle highlight has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The state changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.FaceHandleDragStarted(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Raised when the face handle dragging has started.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The drag started event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.UpdateFaceHandles(Tekla.Structures.Model.Solid)">
            <summary>
            Updates the face handles.
            </summary>
            <param name="solid">The solid.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.FaceHandlesAndFacesValid">
            <summary>
            Determines whether the face handles and faces are valid.
            </summary>
            <returns>True if the face handles and faces are valid; otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.ResetFaceHandlesAndFaces">
            <summary>
            Resets the face handles and faces.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.DisposeFaceHandles">
            <summary>
            Disposes the face handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.ConfigureFaceHandlesForNumericInput">
            <summary>
            Configures the face handles for numeric input.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.CreateControlsForLastActiveFace">
            <summary>
            Creates the controls for the last active face.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.FaceHandleSelectionChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Raised when the face handle selection has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The state changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.OnFaceHandleLocationChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>
            Raised when the face handle location has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The location changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.OnFaceHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Raised when a line handle drag is ongoing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The ongoing drag event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamRectangleProfile.OnFaceHandleDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Raised when a handle drag has ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The drag ended event arguments.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile"/> class represents a circle profile of a beam.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.fixedPoint">
            <summary>
            The position of the fixed point.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.radialHandle">
            <summary>
            The profile's radial point handle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.transformedProfileOffset">
            <summary>
            The transformed profile offset.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.radiusVector">
            <summary>
            The radius vector of the profile.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.tolerationLineDirection">
            <summary>
            The direction of the toleration line.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.centerPoint">
            <summary>
            The center point of the circle profile.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.axisX">
            <summary>
            The coordinate system X axis of the part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.axisY">
            <summary>
            The coordinate system Y axis of the part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.axisZ">
            <summary>
            The cross product of the X and Y axes.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.#ctor(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile"/> class.
            </summary>
            <param name="profileInformation">The part profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.InitializeRadialHandle(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Line3)">
            <summary>
            Initializes the radial point handle.
            </summary>
            <param name="location">The location of the handle.</param>
            <param name="tolerationLine">The direction along which the handle may move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.GetCenterPoint(Tekla.Structures.Model.Beam)">
            <summary>
            Gets the position of the center point.
            </summary>
            <param name="beam">The beam.</param>
            <returns>The position of the center point.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.GetFixedPoint(Tekla.Structures.Model.Beam)">
            <summary>
            Gets the position of the fixed point.
            </summary>
            <param name="beam">The beam.</param>
            <returns>The position of the fixed point.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.GetPointHandleLocation">
            <summary>
            Gets the new location of the point handle.
            </summary>
            <returns>The new location of the handle.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.OnRadialHandleSelectionChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Raised when the point handle selection is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The state changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.OnRadialHandleLocationChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>
            Raised when the point handle location is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The location changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.OnRadialHandleDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Raised when a point handle drag has ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The drag ended event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.OnRadialHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Raised when a point handle drag is ongoing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The ongoing drag event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.BeamCircleProfile.GetProfileAndPositionOffsets(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.Structures.Model.Part,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets.
            </summary>
            <param name="profileInformation">The part profile information.</param>
            <param name="beam">The beam.</param>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter"/> class provides a logic to check whether the
            changed position is within the allowed limit restricted by the opposite point.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter.normal">
            <summary>
            Normal vector of the face being modified.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter.oppositePoint">
            <summary>
            Point on the face opposite to face being modified.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter.#ctor(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter"/> class.
            </summary>
            <param name="normal">Normal vector of the face being modified.</param>
            <param name="oppositePoint">Point on the face opposite to face being modified.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CubeLimiter.IsInBounds(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Checks if toleratedPosition is in bounds or should be limited.
            </summary>
            <param name="originalPosition">The original position, at the start of the toleration session.</param>
            <param name="lastLegalToleratedPosition">The last known legal tolerated position.</param>
            <param name="toleratedPosition">The tolerated position, which is the value to check.</param>
            <param name="limitedPosition">If toleratedPosition is not in bounds, the closest acceptable position; Otherwise, toleratedPosition.</param>
            <returns>True if the tolerated position is in bounds; otherwise, false and the limited value is set to limitedPosition.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.ModelObjectExtensions">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ModelObjectExtensions"/> class extends the <see cref="T:Tekla.Structures.Model.ModelObject"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ModelObjectExtensions.ObjectXDirection(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets the model object's X direction.
            </summary>
            <param name="modelObject">The model object to use.</param>
            <returns>The model object's X direction.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ModelObjectExtensions.ObjectYDirection(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets the model object's Y direction.
            </summary>
            <param name="modelObject">The model object to use.</param>
            <returns>The model object's Y direction.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ModelObjectExtensions.ObjectZDirection(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets the model object's Z direction.
            </summary>
            <param name="modelObject">The model object to use.</param>
            <returns>The model object's Z direction.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs"/> class contains the modified event arguments.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs.#ctor(System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs"/> class.
            </summary>
            <param name="manipulatorTag">The manipulator tag.</param>
            <param name="movingVertices">The moving vertices.</param>
            <param name="dimension01Changes">The dimension 01 changes.</param>
            <param name="dimension03Changes">The dimension 03 changes.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs.Tag">
            <summary>
            Gets the tag.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs.MovingVertices">
            <summary>
            Gets the moving vertices.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs.Dimension01Changes">
            <summary>
            Gets the dimension 01 changes.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs.Dimension03Changes">
            <summary>
            Gets the dimension 03 changes.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.PointSolver">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.PointSolver"/> class calculates the location of points.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PointSolver.GetPreviewLinePointsForMeasure(Tekla.Structures.Model.Part,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Double,System.Double,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the preview line points for a measure.
            </summary>
            <param name="part">The object to manipulate.</param>
            <param name="oldEndPoint">The old end point.</param>
            <param name="oldStartPoint">The old start point.</param>
            <param name="newEndPoint">The new end point.</param>
            <param name="newStartPoint">The new start point.</param>
            <param name="height">The height of the profile.</param>
            <param name="width">The width of the profile.</param>
            <param name="projectionDirection">The projection direction.</param>
            <returns>A list of the preview line points for the measure.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PointSolver.GetPreviewPointsForMovingPoint(Tekla.Structures.Model.Part,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Gets the preview line points for the first corner.
            </summary>
            <param name="part">The object to manipulate.</param>
            <param name="height">The height of the profile.</param>
            <param name="width">The width of the profile.</param>
            <param name="heightChangeAmount">The height change amount.</param>
            <param name="widthChangeAmount">The width change amount.</param>
            <param name="movingPointTag">Tag/Index for the moving point</param>
            <returns>A list of the preview line points for the corner.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PointSolver.GetOriginalPoints(Tekla.Structures.Model.Part,System.Double,System.Double)">
            <summary>
            Gets the original profile corner points.
            </summary>
            <param name="part">The object to manipulate.</param>
            <param name="height">The height of the profile.</param>
            <param name="width">The width of the profile.</param>
            <returns>The original profile corner points.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile"/> class represents a rectangle profile of a polybeam.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.polyBeamRectangleProfileHelper">
            <summary>
            The polybeam rectangle profile helper.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.solidFaceClassifier">
            <summary>
            The solid face classifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.targetPolyBeam">
            <summary>
            The target polybeam.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.#ctor(Tekla.Structures.Model.PolyBeam,Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile"/> class.
            </summary>
            <param name="target">The target polybeam.</param>
            <param name="profileInformation">The target profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator service.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.MoveEndFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the end face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.MoveStartFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the start face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.MoveReferencePoints(System.Double,System.Double,System.Int32)">
            <summary>
            Moves the reference points.
            </summary>
            <param name="modifiedHeightChange">The modified height change.</param>
            <param name="modifiedWidthChange">The modified width change.</param>
            <param name="handleTag">The handle tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.MoveReferencePoints(System.Double,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IList{Tekla.Structures.Model.ContourPoint},System.Int32)">
            <summary>
            Moves the reference points.
            </summary>
            <param name="changeAmount">The change amount.</param>
            <param name="firstChangeDirection">The first change direction.</param>
            <param name="secondChangeDirection">The second change direction.</param>
            <param name="oldPoints">The old points.</param>
            <param name="newPoints">The new points.</param>
            <param name="index">The current index.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.GetLastFace(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3})">
            <summary>
            Gets the last face.
            </summary>
            <param name="controlPoints">The control points.</param>
            <param name="solidFaces">The solid faces.</param>
            <returns>The last face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.IsLastFace(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Determines whether the given face is the last face.
            </summary>
            <param name="face">The face.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondLastControlPoint">The second last control point.</param>
            <param name="lastControlPoint">The last control point.</param>
            <returns>True if the face is the last face; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.GetFaceNormals(System.Int32,System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3})">
            <summary>
            Gets the normals of the faces.
            </summary>
            <param name="handleTag">The handle tag of the face handles.</param>
            <param name="controlPoints">The control points.</param>
            <returns>The face normals.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.OnDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Called when the face handle drag ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfile.UpdatePartBasedOnHandleTag(System.Int32,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Updates the part based on the handle tag.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
            <param name="sideDirection">The side direction.</param>
            <param name="faceNormal">The face normal.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper"/> class contains methods for creating profile controls
            and face handles for a polybeam.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.rectangleManipulators">
            <summary>
            The rectangle manipulators.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.manipulatorManager">
            <summary>
            The manipulator manager.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.rectangleManipulatorOnModifyMethod">
            <summary>
            The method to call when something was modified with a rectangle manipulator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.target">
            <summary>
            Gets or sets the target part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.profileInformation">
            <summary>
            Gets or sets the profile information.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.#ctor(Tekla.Structures.Model.Part,Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService,System.Action{System.Object,Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper"/> class.
            </summary>
            <param name="part">The target part.</param>
            <param name="partProfileInformation">The profile information.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
            <param name="rectangleManipulatorOnModifyMethod">
            The method to call when something was modified with a rectangle manipulator.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.Update(Tekla.Structures.Model.Part,Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation)">
            <summary>
            Updates the helper.
            </summary>
            <param name="part">The target part.</param>
            <param name="partProfileInformation">The profile information.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.CreateSimpleProfileControls(Tekla.Common.Geometry.Vector3,System.Collections.Generic.List{Tekla.Common.Geometry.Vector3},Tekla.BIM.Geometry.Face3)">
            <summary>
            Updates the profile.
            </summary>
            <param name="targetPoint">The target point.</param>
            <param name="controlPoints">The control points.</param>
            <param name="lastFace">The last face.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.GetRectangleProfileInformation(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3})">
            <summary>
            Gets the rectangle profile information.
            </summary>
            <param name="controlPoints">The control points.</param>
            <returns>The rectangle profile information.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.GetStartFacePoints">
            <summary>
            Gets the start face points.
            </summary>
            <returns>The start face points.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.RectangleManipulatorOnModify(System.Object,Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs)">
            <summary>
            Called after something was modified with a rectangle manipulator.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.ConfigureRectangleManipulator(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3,System.Int32)">
            <summary>
            Configures a rectangle manipulator.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="normal">The normal.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.UpdateRectangleManipulator(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3,System.Int32)">
            <summary>
            Updates the rectangle manipulator that has the given tag.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="normal">The normal.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.GetProfileAndPositionOffsets(Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the profile and position offsets.
            </summary>
            <param name="profileOffset">The profile offset.</param>
            <param name="positionOffset">The position offset.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.PolyBeamRectangleProfileHelper.GetRotationAngle">
            <summary>
            Gets the rotation angle.
            </summary>
            <returns>The rotation angle.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation"/> class represents existing or new profile information.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.globalCorners">
            <summary>
            The coordinates of the part corners in global space.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.localCorners">
            <summary>
            The coordinates of the part corners in local space.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.originalHeight">
            <summary>
            The original height from the profile string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.originalWidth">
            <summary>
            The original width from the profile string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.partCoordinateSystem">
            <summary>
            The coordinate system of the part.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.#ctor(System.String,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation"/> class.
            </summary>
            <param name="profileString">The profile of the part.</param>
            <param name="partCoordinateSystem">The coordinate system of the part.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.IsValid">
            <summary>
            Gets a value indicating whether the profile string is valid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.NewHeight">
            <summary>
            Gets a value for the new profile height.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.NewWidth">
            <summary>
            Gets a value for the new profile width.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.Normal">
            <summary>
            Gets the part coordinate system's X-axis direction.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.OriginalGlobalCorners">
            <summary>
            Gets the part corner coordinates in global space.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.OriginalHeight">
            <summary>
            Gets the original profile height.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.OriginalLocalCorners">
            <summary>
            Gets the original local corner locations.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.OriginalWidth">
            <summary>
            Gets the original profile width.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.OriginalThickness">
            <summary>
            Gets or sets the original circular profile thickness.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.Prefix">
            <summary>
            Gets the profile prefix.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.Separator">
            <summary>
            Gets the separator character used in the profile.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.IsCircular">
            <summary>
            Gets a value indicating whether the profile is circular.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetNewProfile(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Int32,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Double@,System.Double@)">
            <summary>
            Gets the new profile using the event information.
            </summary>
            <param name="handleStart">The handle start location.</param>
            <param name="handleEnd">The handle end location.</param>
            <param name="handleNumber">The handle number.</param>
            <param name="profileDirY">The profile's Y direction.</param>
            <param name="profileDirZ">The profile's Z direction.</param>
            <param name="heightChange">The change in height.</param>
            <param name="widthChange">The change in width.</param>
            <returns>The new profile.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetNewProfile(System.Double,System.Double)">
            <summary>
            Gets the new profile string from the modified height and width.
            </summary>
            <param name="heightChange">The change in height.</param>
            <param name="widthChange">The change in width.</param>
            <returns>The new profile string.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetNewProfile(System.Double)">
            <summary>
            Gets the new profile string using the given circular profile diameter.
            </summary>
            <param name="profileDiameter">The circular profile diameter.</param>
            <returns>The new profile string.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetHeightAndWidthToAdd(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Int32,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Double@,System.Double@)">
            <summary>
            Gets the height and width to add.
            </summary>
            <param name="handleStart">The handle location at the start of the drag.</param>
            <param name="handleEnd">The latest handle location.</param>
            <param name="handleNumber">The handle number.</param>
            <param name="profileDirY">The profile's Y direction.</param>
            <param name="profileDirZ">The profile's Z direction.</param>
            <param name="heightToAdd">The height to add.</param>
            <param name="widthToAdd">The width to add.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.IsProfileCircular(System.String)">
            <summary>
            Determines whether the part has a circular profile prefix.
            </summary>
            <param name="prefix">The part profile prefix.</param>
            <returns>True if the part has a circular profile prefix.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetProfileDimensions(System.String,System.Double@,System.Double@)">
            <summary>
            Tries to get the height and width dimensions from the profile string.
            </summary>
            <param name="profileString">The profile string.</param>
            <param name="height">The profile height.</param>
            <param name="width">The profile width.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetProfileStringWithoutPrefix(System.String)">
            <summary>
            Gets the profile string without any prefix.
            </summary>
            <param name="profileString">The original profile string.</param>
            <returns>The profile string without any prefix.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation.GetPositionOfSeparator(System.String)">
            <summary>
            Gets the position of the separator (if any) in the profile string.
            </summary>
            <param name="profileStringWithoutPrefix">The profile string without any prefix.</param>
            <returns>The position of the separator.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter"/> class is for limiting toleration results when handling a rectangular shape.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter.vertices">
            <summary>
            The vertices of the rectangle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter.vertexTag">
            <summary>
            The vertex tag.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter.#ctor(System.Collections.Generic.List{Tekla.Common.Geometry.Vector3},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter"/> class.
            </summary>
            <param name="vertices">The vertices of the rectangle.</param>
            <param name="vertexTag">The vertex tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleLimiter.IsInBounds(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Checks whether the tolerated position is in bounds or should be limited.
            </summary>
            <param name="originalPosition">The original position.</param>
            <param name="lastLegalToleratedPosition">The last legal tolerated position.</param>
            <param name="toleratedPosition">The tolerated position.</param>
            <param name="limitedPosition">The limited position.</param>
            <returns>True if the tolerated position is in bounds.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.ModifiedEvent">
            <summary>
            The delegate for the modified event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator"/> class is a manipulator for manipulating a rectangle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.pointHandles">
            <summary>
            The point handles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.rectangleSegments">
            <summary>
            The rectangle segments.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.direction01">
            <summary>
            The direction from vertex 0 to 1.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.direction03">
            <summary>
            The direction from vertex 0 to 3.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.rectangleNormal">
            <summary>
            The normal of the rectangle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.rectangleVertices">
            <summary>
            The vertices of the rectangle.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.#ctor(System.Object,System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator"/> class.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="vertices">The rectangle vertices.</param>
            <param name="normal">The rectangle normal.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnModify">
            <summary>
            The event that is invoked after something was modified.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.RectangleTag">
            <summary>
            Gets the tag of the rectangle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.Vertices">
            <summary>
            Gets or sets the vertices of the rectangle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.Normal">
            <summary>
            Gets or sets the normal of the rectangle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.ProfileValid">
            <summary>
            Gets a value indicating whether the profile is valid.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnInitialize">
            <summary>
            Performs the required actions to initialize the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.CreateModifiedEventArgsForOneVertex(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Creates the modified event arguments for one moving vertex.
            </summary>
            <param name="manipulatorTag">The manipulator tag.</param>
            <param name="movingVertex">The moving vertex.</param>
            <param name="dimension01Change">The dimension 01 change.</param>
            <param name="dimension03Change">The dimension 03 change.</param>
            <returns>The modified event arguments.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.UpdatePointHandlesAndRectangleSegments(System.Boolean)">
            <summary>
            Updates the point handles and rectangle segments.
            </summary>
            <param name="forceUpdate">Indicates whether to force an update for the rectangle segments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.InvokeOnModify(Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs)">
            <summary>
            Invokes the <see cref="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnModify"/> event.
            </summary>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.ValidateProfile">
            <summary>
            Validates the profile.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnDimensionChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Called when a dimension change is ongoing.
            </summary>
            <param name="dimension">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnDimensionChanged(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Called when a dimension has changed.
            </summary>
            <param name="dimension">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnDimension0Or2Changed(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Called when the dimension 0 or 2 has changed.
            </summary>
            <param name="startPointMove">The start point move.</param>
            <param name="endPointMove">The end point move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnDimension1Or3Changed(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Called when the dimension 1 or 3 has changed.
            </summary>
            <param name="startPointMove">The start point move.</param>
            <param name="endPointMove">The end point move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.TryGetStartAndEndPointMoves(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase,Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the start and end point moves.
            </summary>
            <param name="dimension">The changing or changed dimension.</param>
            <param name="startPointMove">The start point move.</param>
            <param name="endPointMove">The end point move.</param>
            <returns>True if the <paramref name="dimension"/> results in valid move vectors; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.MatchRectangleSegmentsToPoints">
            <summary>
            Matches the rectangle segments to the point handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.ConfigureRectangleSegment(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Int32)">
            <summary>
            Configures the rectangle segment.
            </summary>
            <param name="segment">The segment.</param>
            <param name="tolerationLine">The toleration line.</param>
            <param name="handleNumber">The handle number.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.UpdateRectangleSegment(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Int32,System.Boolean)">
            <summary>
            Updates the rectangle segment.
            </summary>
            <param name="segment">The segment.</param>
            <param name="tolerationLine">The toleration line.</param>
            <param name="handleNumber">The handle number.</param>
            <param name="forceUpdate">Indicates whether to force an update.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnSegmentHandleLocationChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>
            Raised when the segment handle location has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The location changed event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnSegmentHandleDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Raised when the segment handle dragging has ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The drag ended event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnSegmentHandleMoved(System.Int32,Tekla.Common.Geometry.Vector3)">
            <summary>
            Raised when the segment handle has moved, either by a location change or by ending dragging.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="translation">The translation of the location change.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.GetModifiedEventArgsWhenSegmentHandleMoved(System.Int32,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the modified event arguments when the segment handle moved.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="translation">The translation.</param>
            <returns>The modified event arguments.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnSegmentHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Raised when the segment handle dragging is ongoing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The ongoing drag event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.ConfigurePointHandle(Tekla.Common.Geometry.Vector3,System.Int32)">
            <summary>
            Configures a point handle.
            </summary>
            <param name="location">The location.</param>
            <param name="handleNumber">The handle number.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.UpdatePointHandle(Tekla.Common.Geometry.Vector3,System.Int32)">
            <summary>
            Updates the point handle.
            </summary>
            <param name="location">The location.</param>
            <param name="handleNumber">The handle number.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnPointHandleDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Raised when the point handle dragging has ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The drag ended event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.GetModifiedEventArgsWhenPointHandleDragEnded(System.Int32,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the modified event arguments when the point handle drag has ended.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="translation">The translation.</param>
            <returns>The modified event arguments.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator.OnPointHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Raised when the point handle dragging is ongoing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The ongoing drag event arguments.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile"/> class represents a rectangle profile of for example a beam.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.#ctor(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile"/> class.
            </summary>
            <param name="profileInformation">The target profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.RectangleManipulatorOnModify(System.Object,Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs)">
            <summary>
            Raised when something is modified.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The modified event arguments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.UpdatePart(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Int32,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Updates the part.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
            <param name="handleTag">The handle tag.</param>
            <param name="profileDirectionY">The profile's Y direction.</param>
            <param name="profileDirectionZ">The profile's Z direction.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.MoveStartFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the start face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.MoveEndFace(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves the end face.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.MoveStartFace(System.Double)">
            <summary>
            Moves the start face.
            </summary>
            <param name="distance">The distance to move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.MoveEndFace(System.Double)">
            <summary>
            Moves the end face.
            </summary>
            <param name="distance">The distance to move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.MoveReferencePoints(System.Double,System.Double,System.Int32)">
            <summary>
            Moves the reference points.
            </summary>
            <param name="heightChange">The height change.</param>
            <param name="widthChange">The width change.</param>
            <param name="handleTag">The handle tag.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.UpdatePart(System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Double})">
            <summary>
            Updates the part.
            </summary>
            <param name="movingFaces1">The tags of the first moving faces.</param>
            <param name="moves1">The distances to move the first faces.</param>
            <param name="movingFaces2">The tags of the second moving faces.</param>
            <param name="moves2">The distances to move the second faces.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.Move(System.Int32,System.Double)">
            <summary>
            Moves a face based on the specified handle tag.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="move">The distance to move.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfile.TryUpdateTargetProfileAndPosition(System.Int32,System.String,System.Double,System.Double)">
            <summary>
            Tries to update the target profile and position.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <param name="newProfile">The new profile.</param>
            <param name="heightChange">The height change.</param>
            <param name="widthChange">The width change.</param>
            <returns>True if successful; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile"/> class represents common data for all profiles.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.HandleInteractor">
            <summary>
            The handle interactor service.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.GraphicsContext">
            <summary>
            The graphics context.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.ManipulatorManager">
            <summary>
            The manipulator manager.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.#ctor(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile"/> class.
            </summary>
            <param name="profileInformation">The target profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.Target">
            <summary>
            Gets or sets the part that is manipulated.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.ProfileInformation">
            <summary>
            Gets the profile information.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.ShapeProfile.UpdateProfile(Tekla.Structures.Model.Part,Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation)">
            <summary>
            Updates the profile.
            </summary>
            <param name="target">The part.</param>
            <param name="profileInformation">The profile information.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile"/> class represents a circle profile.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile.#ctor(Tekla.Structures.Features.Common.ProfileEditing.ProfileInformation,Tekla.BIM.DirectManipulation.Services.Interaction.IHandleInteractorService,Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile"/> class.
            </summary>
            <param name="profileInformation">The target profile information.</param>
            <param name="handleInteractor">The handle interactor service.</param>
            <param name="graphicsContext">The graphics context.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile.UpdatePart(System.Double)">
            <summary>
            Updates the profile with a single value (e.g. a circle profile diameter).
            </summary>
            <param name="singleValue">The single value.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.CircleProfile.TryUpdateTargetProfile(System.String)">
            <summary>
            Tries to update the target profile.
            </summary>
            <param name="newProfile">The new profile.</param>
            <returns>True on success.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper"/> class contains helper methods for creating face handles and
            profile controls.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.NegativeFullModifier">
            <summary>
            The negative full modifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.NegativeHalfModifier">
            <summary>
            The negative half modifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.ZeroModifier">
            <summary>
            The zero modifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.PositiveHalfModifier">
            <summary>
            The positive half modifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.PositiveFullModifier">
            <summary>
            The positive full modifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.manipulatorManager">
            <summary>
            The manipulator manager.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.rectangleManipulatorOnModifyMethod">
            <summary>
            The method to call when something was modified with a rectangle manipulator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.rectangleManipulator">
            <summary>
            The last created rectangle manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.#ctor(Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService,System.Action{System.Object,Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper"/> class.
            </summary>
            <param name="manipulatorManager">The manipulator manager.</param>
            <param name="rectangleManipulatorOnModifyMethod">
            The method to call when something was modified with a rectangle manipulator.
            </param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetFaceTag(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Vector3[])">
            <summary>
            Gets the face tag.
            </summary>
            <param name="face">The face.</param>
            <param name="partAxisX">The part's X axis.</param>
            <param name="originalGlobalCorners">The original global corners of the profile.</param>
            <returns>The face tag.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.ConfigureFaceHandleForNumericInput(Tekla.BIM.DirectManipulation.Services.Interaction.IFaceHandle,Tekla.BIM.Geometry.Face3[])">
            <summary>
            Configures a face handle for numeric input.
            </summary>
            <param name="faceHandle">The face handle.</param>
            <param name="faces">The faces.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetMovingFaces(Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs,System.Collections.Generic.IList{System.Int32}@,System.Collections.Generic.IList{System.Int32}@)">
            <summary>
            Gets the moving faces.
            </summary>
            <param name="eventArgs">The instance containing the event data.</param>
            <param name="firstMovingFaces">The first moving faces.</param>
            <param name="secondMovingFaces">The second moving faces.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHeightModifier(Tekla.Structures.Model.Position,System.Int32)">
            <summary>
            Gets the height modifier.
            </summary>
            <param name="position">The part position.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The height modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetWidthModifier(Tekla.Structures.Model.Position,System.Int32)">
            <summary>
            Gets the width modifier.
            </summary>
            <param name="position">The part position.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The width modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.DrawPreviewLinesForCorner(Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsContext,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Draws the preview lines for a corner.
            </summary>
            <param name="graphicsContext">The graphics context.</param>
            <param name="point0">The first line point.</param>
            <param name="point1">The second line point.</param>
            <param name="point2">The third line point.</param>
            <param name="point3">The fourth line point.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.CreateControlsForFace(System.Object,System.Int32,System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Creates the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleManipulator"/> for the face with the given tag.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="faceTag">The face tag.</param>
            <param name="faceVertices">The face vertices.</param>
            <param name="faceNormal">The face normal.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetMovingFaces(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the moving faces.
            </summary>
            <param name="tag">The manipulator tag.</param>
            <param name="movingVertex">The moving vertex.</param>
            <param name="firstMovingFace">The first moving face.</param>
            <param name="secondMovingFace">The second moving face.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetFirstMovingFace(System.Int32,System.Int32)">
            <summary>
            Gets the first moving face.
            </summary>
            <param name="tag">The manipulator tag.</param>
            <param name="movingVertex">The moving vertex.</param>
            <returns>The first moving face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetSecondMovingFace(System.Int32,System.Int32)">
            <summary>
            Gets the second moving face.
            </summary>
            <param name="tag">The manipulator tag.</param>
            <param name="movingVertex">The moving vertex.</param>
            <returns>The second moving face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.BothDistancesSmallEnough(System.Double,System.Double)">
            <summary>
            Determines whether both distances are smaller than 0.1.
            </summary>
            <param name="firstDistance">The first distance.</param>
            <param name="secondDistance">The second distance.</param>
            <returns>True if the distances are small enough; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHeightModifierForMiddlePlane(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the height modifier for <see cref="F:Tekla.Structures.Model.Position.PlaneEnum.MIDDLE"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The height modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHeightModifierForLeftPlane(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the height modifier for <see cref="F:Tekla.Structures.Model.Position.PlaneEnum.LEFT"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The height modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHeightModifierForRightPlane(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the height modifier for <see cref="F:Tekla.Structures.Model.Position.PlaneEnum.RIGHT"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The height modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetWidthModifierForMiddleDepth(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the width modifier for <see cref="F:Tekla.Structures.Model.Position.DepthEnum.MIDDLE"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The width modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetWidthModifierForFrontDepth(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the width modifier for <see cref="F:Tekla.Structures.Model.Position.DepthEnum.FRONT"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The width modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetWidthModifierForBehindDepth(Tekla.Structures.Model.Position.RotationEnum,System.Int32)">
            <summary>
            Gets the width modifier for <see cref="F:Tekla.Structures.Model.Position.DepthEnum.BEHIND"/>.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="handleTag">The handle tag.</param>
            <returns>The width modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHandle1Or2DirectionModifier(System.Int32)">
            <summary>
            Gets the handle 1 or 2 direction modifier.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <returns>The modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetHandle0Or1DirectionModifier(System.Int32)">
            <summary>
            Gets the handle 0 or 1 direction modifier.
            </summary>
            <param name="handleTag">The handle tag.</param>
            <returns>The modifier.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetTrueOrFalseValue(System.Boolean,System.Double,System.Double)">
            <summary>
            Gets the double true or false value based on the given boolean value.
            </summary>
            <param name="booleanValue">The boolean value.</param>
            <param name="trueValue">The true value.</param>
            <param name="falseValue">The false value.</param>
            <returns>The true or false value.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.GetTrueOrFalseValue(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets the integer true or false value based on the given boolean value.
            </summary>
            <param name="booleanValue">The boolean value.</param>
            <param name="trueValue">The true value.</param>
            <param name="falseValue">The false value.</param>
            <returns>The true or false value.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.Value0Or3(System.Int32)">
            <summary>
            Determines whether the given value is 0 or 3.
            </summary>
            <param name="value">The value to check.</param>
            <returns>True if the value is 0 or 3; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.Value0Or1(System.Int32)">
            <summary>
            Determines whether the given value is 0 or 1.
            </summary>
            <param name="value">The value to check.</param>
            <returns>True if the value is 0 or 1; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileHelper.RectangleManipulatorOnModify(System.Object,Tekla.Structures.Features.Common.ProfileEditing.ModifiedEventArgs)">
            <summary>
            Called after something was modified with a rectangle manipulator.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The instance containing the event data.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo"/> class provides information about a rectangle profile.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo.vertices">
            <summary>
            The vertices of the profile.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo.Vertices">
            <summary>
            Gets or sets the vertices of the profile. The amount of vertices must be four.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo.Height">
            <summary>
            Gets or sets the height of the profile.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleProfileInfo.Width">
            <summary>
            Gets or sets the width of the profile.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment"/> class is a manipulator for showing a segment and its dimension in rectangle
            profile editing. The dimension becomes visible when the cursor is moved on top of the segment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.handleNumber">
            <summary>
            The handle number.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.visibleDimensionsSwitcher">
            <summary>
            The instance deciding whether any dimensions are visible for the current node.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.segmentHandle">
            <summary>
            The segment handle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.dimensionManipulator">
            <summary>
            The dimension manipulator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.startPoint">
            <summary>
            The start point of the segment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.endPoint">
            <summary>
            The end point of the segment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.tolerationLine">
            <summary>
            The toleration line.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.#ctor(System.Object,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment"/> class.
            </summary>
            <param name="parent">The target object which is being manipulated.</param>
            <param name="segment">The segment.</param>
            <param name="tolerationLine">The toleration line.</param>
            <param name="handleNumber">The handle number.</param>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.DragOngoing">
            <summary>
            Occurs when a segment handle drag is going on.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.DragEnded">
            <summary>
            Occurs when a segment handle drag has ended.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.LocationChanged">
            <summary>
            Occurs when the location of the segment handle has changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.DimensionChangeOngoing">
            <summary>
            Occurs when the dimension of the segment is changing.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.DimensionChanged">
            <summary>
            Occurs when the dimension of the segment has changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.StartPoint">
            <summary>
            Gets or sets the start point of the segment.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.EndPoint">
            <summary>
            Gets or sets the end point of the segment.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.DragConfiguration">
            <summary>
            Gets or sets the drag configuration.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.TolerationLine">
            <summary>
            Gets or sets the toleration line.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.ForceUpdate">
            <summary>
            Forces an update.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnInitialize">
            <summary>
            Performs the required actions to initialize the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnSegmentHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Called when a segment handle drag is going on.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnSegmentHandleDragEnded(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs)">
            <summary>
            Called when the segment handle drag ended.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnSegmentHandleLocationChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleLocationChangedEventArgs)">
            <summary>
            Called when the segment handle location changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnMeasureChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Called when a measure change is going on.
            </summary>
            <param name="measure">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.OnMeasureChanged(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Called when the measure changed.
            </summary>
            <param name="measure">The dimension manipulator.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.UpdateDragConfiguration">
            <summary>
            Updates the drag configuration.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.RectangleSegment.UpdateDimension">
            <summary>
            Updates the dimension.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier"/> class contains methods for classifying a polybeam solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.faceHandles">
            <summary>
            The face handles.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.#ctor(Tekla.Structures.Model.PolyBeam)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier"/> class.
            </summary>
            <param name="target">The target polybeam.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.Classify(Tekla.Common.Geometry.Vector3[],System.Collections.Generic.List{Tekla.Common.Geometry.Vector3},System.Collections.Generic.List{Tekla.BIM.Geometry.Face3},Tekla.BIM.DirectManipulation.Services.Interaction.HandleTranslationEventHandler{Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs})">
            <summary>
            Classifies the given solid faces.
            </summary>
            <param name="profileCorners">The profile corners.</param>
            <param name="controlPoints">The control points.</param>
            <param name="solidFaces">The solid faces.</param>
            <param name="dragEndedHandler">The drag ended event handler.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.GetFaces(Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType)">
            <summary>
            Gets the faces with the given face type.
            </summary>
            <param name="faceType">The face type.</param>
            <returns>The faces.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.OnInitialize">
            <summary>
            Performs the required actions to initialize the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.ContainSamePoints(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3})">
            <summary>
            Checks whether the given point lists contain the same points.
            </summary>
            <param name="firstPoints">The first point list.</param>
            <param name="secondPoints">The second point list.</param>
            <returns>True if the lists contain the same points.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.GetNextFaceEdge(Tekla.BIM.Geometry.Face3,System.Int32)">
            <summary>
            Gets the start edge of the next face.
            </summary>
            <param name="knownFace">The already known face.</param>
            <param name="edgeIndex">The start point index of the known face's start edge.</param>
            <returns>The start edge of the next face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.GetMatchingCornersFromFacePoints(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Gets the matching corners from the face points.
            </summary>
            <param name="facePoints">The face points.</param>
            <param name="corners">The profile corners.</param>
            <returns>The matching corners.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.ConstructFaceHandle(Tekla.BIM.Geometry.Face3,Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType,Tekla.BIM.DirectManipulation.Services.Interaction.HandleTranslationEventHandler{Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs})">
            <summary>
            Constructs a face handle.
            </summary>
            <param name="face">The face for the handle.</param>
            <param name="tag">The tag for the handle.</param>
            <param name="dragEndedHandler">The drag ended event handler.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.FaceHandleHighlightChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Called when a face handle highlight changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.FaceHandleSelectionChanged(Tekla.BIM.DirectManipulation.Services.Interaction.IHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleStateEventArgs{System.Boolean})">
            <summary>
            Called when the face handle selection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.FaceHandleDragStarted(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Called when a face handle drag started.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.FaceHandleDragOngoing(Tekla.BIM.DirectManipulation.Services.Interaction.ITranslationHandle,Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEventArgs)">
            <summary>
            Called when a face handle drag is ongoing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.ClassifyWithTag(System.Collections.Generic.List{Tekla.BIM.Geometry.Face3},Tekla.Common.Geometry.Segment3,Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType,Tekla.BIM.DirectManipulation.Services.Interaction.HandleTranslationEventHandler{Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs})">
            <summary>
            Classifies the correct solid sides with the given tag.
            </summary>
            <param name="faceList">The face list.</param>
            <param name="startEdge">The start edge.</param>
            <param name="tag">The tag to use.</param>
            <param name="dragEndedHandler">The drag ended event handler.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.ClassifyStartAndEndFaces(System.Collections.Generic.List{Tekla.BIM.Geometry.Face3},Tekla.Common.Geometry.Vector3[],Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.BIM.DirectManipulation.Services.Interaction.HandleTranslationEventHandler{Tekla.BIM.DirectManipulation.Services.Interaction.HandleDragEndedEventArgs})">
            <summary>
            Classifies the start and end faces.
            </summary>
            <param name="faceList">The face list.</param>
            <param name="profileCorners">The profile corners.</param>
            <param name="secondLastControlPoint">The second last control point.</param>
            <param name="lastControlPoint">The last control point.</param>
            <param name="dragEndedHandler">The drag ended event handler.</param>
            <returns>The corners of the start face.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceClassifier.DisposeAllHandles">
            <summary>
            Disposes all handles.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType"/> enum specifies the solid face types.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.Left">
            <summary>
            The left side face of the solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.Top">
            <summary>
            The top side face of the solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.Right">
            <summary>
            The right side face of the solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.Bottom">
            <summary>
            The bottom side face of the solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.Start">
            <summary>
            The start face of the solid.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ProfileEditing.SolidFaceType.End">
            <summary>
            The end face of the solid.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties">
            <summary>
            The CustomPartProperties class is for accessing properties of a custom part being placed.
            It selects properties from core as needed.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.inputPointType">
            <summary>
            The input point type of the custom part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.commandType">
            <summary>
            The feature type specifies whether the feature is for creation or modification.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.item">
            <summary>
            The original item. Used when the modification mode is active.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.appliedValuesItem">
            <summary>
            The item that is used for getting the applied position values.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.startPoint">
            <summary>
            The start point
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.endPoint">
            <summary>
            The end point
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.AdjustPositionString">
            <summary>
            The adjust position string.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.#ctor(Tekla.Structures.Model.CustomPart,Tekla.BIM.DirectManipulation.Services.State.CommandType,System.Nullable{Tekla.Structures.Features.Common.InputPointType},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties" /> class.
            </summary>
            <param name="item">The custom part item.</param>
            <param name="commandType">The type of the feature.</param>
            <param name="inputPointType">The type of the input point.</param>
            <param name="creationCommandId">The creation command identifier.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="item" /></exception>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.ModelObject">
            <summary>
            Gets the <see cref="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.ModelObject"/> in the model.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.CustomPartName">
            <summary>
            Gets the name of the custom part.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.GetStartPoint(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets or sets the start point.
            </summary>
            <param name="item">The item.</param>
            <returns>The start point.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.UpdateModelObjectPosition(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.InsertItem">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.ModifyItem">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.Select">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.GetCurrentInsertionPlane">
            <summary>
            Gets the current insertion plane based on the input type.
            </summary>
            <returns>The current plane for inserting.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.UpdateTarget(Tekla.Structures.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.SetItem(Tekla.Structures.Model.ModelObject)">
            <summary>
            Sets the item.
            </summary>
            <param name="newItem">The item.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.GetAdjustPositionString">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.GetExtrema(Tekla.Common.Geometry.Vector3@,Tekla.Common.Geometry.Vector3@)">
            <summary>
            Gets the item extrema.
            </summary>
            <param name="minPoint">The minimum point.</param>
            <param name="maxPoint">The maximum point.</param>
            <returns>True if the preview extrema can be fetched; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.SelectPreviewExtrema">
            <summary>
            Fetches the extrema of the custom part from core.
            </summary>
            <returns>True if the preview extrema can be fetched; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartProperties.SelectPreviewGeometry">
            <summary>
            Fetches the geometry of the custom part from core.
            </summary>
            <returns>True if the preview geometry can be fetched; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.WarehouseItem.CustomPartUdaHelper">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.WarehouseItem.CustomPartUdaHelper"/> class is a helper class for getting and setting <see cref="T:Tekla.Structures.Model.CustomPart"/>
            related values using User Defined Attributes.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.CustomPartUdaHelper.InputPointTypeName">
            <summary>
            The name of the user property for the input point type used to create the custom part.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartUdaHelper.GetInputPointType(Tekla.Structures.Model.CustomPart)">
            <summary>
            Gets the input point type.
            </summary>
            <param name="item">The item.</param>
            <returns>
            The input point type.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.CustomPartUdaHelper.SetInputPointType(Tekla.Structures.Model.CustomPart,Tekla.Structures.Features.Common.InputPointType)">
            <summary>
            Sets the input point type used to create the custom part.
            </summary>
            <param name="item">The item.</param>
            <param name="inputPointType">The type of the input point.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator"/> class allows the modification of a warehouse item.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.dimensions">
            <summary>
            The list of <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulator"/> instances displaying the distances to the face edges.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.faceNormal">
            <summary>
            The face normal of dimensionReferences.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.coordSysManipulator">
            <summary>
            The instance modifying the coordinate system of <see cref="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.itemPreview"/>.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.itemPreview">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/> handling the placing and drawing of the item preview.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.#ctor(Tekla.Structures.Features.Common.PlacingItemPreview)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator" /> class.
            </summary>
            <param name="placingItemPreview">The <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview" /> to manipulate.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.CoordinateSystem">
            <summary>
            Gets or sets the coordinate system of the warehouse item.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.DimensionReferences">
            <summary>
            Gets the <see cref="T:Tekla.BIM.DirectManipulation.Services.Snapping.SegmentReference"/> values to draw dimensions against.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.AdjustPositionString">
            <summary>
            Gets or sets the adjust positioning string.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.Update(Tekla.Structures.Features.Common.PlacingItemPreview)">
            <summary>
            Updates the associated <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/>.
            </summary>
            <param name="preview">The associated <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/>.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnInitialize">
            <summary>
            Initializes the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.UpdateView">
            <summary>
            Updates the appearance of the manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.InitializeDimensions(System.Collections.Generic.IEnumerable{Tekla.BIM.DirectManipulation.Services.Graphics.MeasurementGraphicGeometry},System.Collections.Generic.IEnumerable{Tekla.BIM.DirectManipulation.Services.Graphics.MeasurementGraphicGeometry})">
            <summary>
            Initializes the dimensions.
            </summary>
            <param name="measurementsOnPlane">The measurements on plane.</param>
            <param name="measurementsZ">The measurements z.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.UpdateScaleFactor">
            <summary>
            Updates the scale factor.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.GetMeasurementsOnthePlane">
            <summary>
            Gets the geometry for all measurements that need to be drawn for the preview.
            The positive end of each measurement is located in the item's origin.
            </summary>
            <returns>A collection with the geometry of each measurement that needs to be drawn.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.GetMeasurementsZ">
            <summary>
            Gets the geometry for all measurements on Z direction that need to be drawn for the preview.
            The positive end of each measurement is located in the item's origin.
            </summary>
            <returns>A collection with the geometry of each measurement that needs to be drawn.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnCoordSysChangeStarted(Tekla.BIM.DirectManipulation.Services.Manipulators.CoordinateSystemManipulator)">
            <summary>
            Handles started changes in the coordinate system.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnCoordSysChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.CoordinateSystemManipulator)">
            <summary>
            Handles ongoing changes in the coordinate system.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnCoordSysChangeEnded(Tekla.BIM.DirectManipulation.Services.Manipulators.CoordinateSystemManipulator,System.Boolean)">
            <summary>
            Handles ended changes in the coordinate system.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="interrupted">A value indicating whether the change has been ended by an interrupt.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnMeasureChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles ongoing change events of any <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulator"/> in <see cref="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.dimensions"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnMeasureChangeEnded(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles ended change events of any <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulator"/> in <see cref="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.dimensions"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnMeasureZChangeOngoing(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles ongoing change events of any <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulator"/> in <see cref="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.dimensions"/> in the Z direction.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.OnMeasureZChangeEnded(Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulatorBase)">
            <summary>
            Handles ended change events of any <see cref="T:Tekla.BIM.DirectManipulation.Services.Manipulators.DimensionManipulator"/> in <see cref="F:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.dimensions"/> in the Z direction.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.SetMeasureChangedOrigin(Tekla.Common.Geometry.Vector3)">
            <summary>
            Sets the origin after the measure changed.
            </summary>
            <param name="originOnPlane">The origin of <see cref="P:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.CoordinateSystem"/> as projected on the measurement plane.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.SetMeasureZChangedOrigin(Tekla.Common.Geometry.Vector3)">
            <summary>
            Sets the origin after the measure on Z direction changed.
            </summary>
            <param name="origin">The origin.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.WarehouseItem.WarehouseItemManipulator.ModifyItemInModel">
            <summary>
            Modifies the item in the model and retains the item's coordinate.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.EdgeReferencePoint">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.EdgeReferencePoint"/> class represents a point on an edge that acts as a reference point for even distance snapping.
            Measurements are drawn to this point.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.EdgeReferencePoint.#ctor(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Segment3,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.EdgeReferencePoint"/> class.
            </summary>
            <param name="edgePoint">The reference point.</param>
            <param name="edge">The edge that the point lies on.</param>
            <param name="distance">The distance from this reference point to some other point.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.EdgeReferencePoint.PointOnEdge">
            <summary>
            Gets the reference point.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.EdgeReferencePoint.Edge">
            <summary>
            Gets the edge that the point lies on.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.EdgeReferencePoint.Distance">
            <summary>
            Gets the distance from this reference point to some other point (usually the cursor point).
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ExtremaBoxDrawer">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ExtremaBoxDrawer"/> class draws the extrema box of a warehouse item to the view.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.segmentsOutside">
            <summary>
            The extrema box edges, or segments of those, that lie outside a tolerated object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.segmentsInside">
            <summary>
            The extrema box edges, or segments of those, that lie inside a tolerated object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.segmentsOnFace">
            <summary>
            The extrema box edges that lie on the face of a tolerated object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaBoxGraphics">
            <summary>
            The context to which all graphics for <see cref="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaBox"/> are drawn.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.offsetPlaneGraphics">
            <summary>
            The context to which all graphics for <see cref="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.offsetPlane"/> are drawn.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.useOffsetPlaneGraphics">
            <summary>
            The value indicating whether the offset plane graphics should be used. 
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaBox">
            <summary>
            The extrema box to draw.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaBoxOffset">
            <summary>
            The offset of the extrema box from its handle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.updatedExtremaBox">
            <summary>
            The updated extrema box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaCoordinateSystem">
            <summary>
            The original coordinate system of the extrema box.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.offsetPlane">
            <summary>
            The plane to which the <see cref="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.extremaBox"/> is offset.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.isPreviewExtrema">
            <summary>
            The value indicating whether the preview extrema box should be drawn.
            The preview extrema box is used when the item is being modified/created and not yet saved in the model.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.faceProjectionPolygon">
            <summary>
            The edges created by projecting the extrema box to a tolerated object face.
            This is either the intersection of the extrema box and the face or the shadow of the extrema box
            on the face. If either the bottom or top plane of the box lie on the face, the projection is 
            not done, since it would coincide with one of those planes.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ExtremaBoxDrawer.faceIntersectionPoints">
            <summary>
            The intersection points on the face used to draw the edges of the extrema box.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ExtremaBoxDrawer" /> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.#ctor(Tekla.Common.Geometry.Box3,Tekla.Common.Geometry.Vector3,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ExtremaBoxDrawer" /> class.
            </summary>
            <param name="extremaBox">The extrema box to draw.</param>
            <param name="extremaOffset">The offset of the extrema box from its handle.</param>
            <param name="extremaCoordinateSystem">The original coordinate system of the extrema box.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ExtremaBox">
            <summary>
            Gets or sets the <see cref="T:Tekla.Common.Geometry.Box3"/> to draw as the extrema box.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ExtremaBoxOffset">
            <summary>
            Gets or sets the offset by which to draw <see cref="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ExtremaBox"/>.
            This offset is considered within the local coordinate system of <see cref="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ExtremaBox"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ExtremaCoordinateSystem">
            <summary>
            Gets or sets the original coordinate system of the extrema box.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.IsPreviewExtrema">
            <summary>
            Gets or sets a value indicating whether the preview extrema box should be drawn.
            The preview extrema box is used when the item is being modified/created and not yet saved in the model.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.OffsetPlane">
            <summary>
            Gets or sets the plane to which the extrema box is offset.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.UseOffsetPlaneGraphics">
            <summary>
            Gets or sets the value indicating whether the offset plane graphics should be used. 
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.RemoveDrawnGeometry">
            <summary>
            Removes the drawn geometry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.Refresh">
            <summary>
            Refreshes the extrema box graphics.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.OnInitialize(Tekla.BIM.DirectManipulation.Services.Graphics.IGraphicsDrawerService)">
            <summary>
            Initializes the graphic.
            </summary>
            <param name="service">The service to open the graphics context from.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.UpdateView">
            <summary>
            Updates the view.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.Draw">
            <summary>
            Draws the extrema box in its current location.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.GetCurveType(Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Gets the curve type to draw based on <see cref="P:Tekla.Structures.Features.Common.ExtremaBoxDrawer.IsPreviewExtrema"/>.
            </summary>
            <param name="curveType">The initial curve type.</param>
            <returns>The curve type to use for drawing.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ClearSegments">
            <summary>
            Clears the cached extrema box segments.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ComputeSegmentsAndTypes">
            <summary>
            Computes the edges of the extrema box and classifies them based on their location in relation to the handle
            of the box. As the handle lies on the face of tolerated objects this in effect classifies the edges based
            on their spatial relation to a tolerated face.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ResetFaceIntersectionPoints">
            <summary>
            Resets the collection of face intersection points.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ProcessEdge(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Classifies the given edge based on its position to the plane the extrema is tied to and adds it to a segment list
            for later drawing to the screen. This might involve splitting the edge. Also stores any points where the edge
            intersects the plane for later use when creating the shadow of the part.
            </summary>
            <param name="startPoint">The start point of the edge.</param>
            <param name="endPoint">The end point of the edge.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ProcessIntersectionEdge(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.PlaneSideClassification)">
            <summary>
            Processes an intersection edge. Stores any points where the edge intersects the plane for later use when creating
            the shadow of the part.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="startPointSide">The side where the start point is.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ComputeHorizontalLoopEdges(Tekla.Common.Geometry.Vector3)">
            <summary>
            Computes the segments of one horizontal loop of the extrema box and classifies them based on location relative
            to the tolerated face. 
            </summary>
            <param name="startPoint">The first point of the loop to process.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ComputeVerticalEdges(Tekla.Common.Geometry.Vector3)">
            <summary>
            Computes the vertical edges of the extrema box and classifies them based on location relative
            to the tolerated face. Splits edges to segments if they intersect the toleration plane.
            </summary>
            <param name="startPoint">The start point.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ComputeFaceProjectionLoop">
            <summary>
            Computes the loop created by the projection of the extrema onto the tolerated plane.
            If the given list of intersection points is non-empty, it is assumed that these are the points
            that form the loop (the extrema intersects the plane and the intersection points were gathered
            in <see cref="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.ProcessEdge(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)"/>). If the list is empty a loop is created by projecting the extrema
            box to the toleration plane.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.GetProjectedCornerPoints">
            <summary>
            Gets the corner points of the extrema and projects them to the toleration plane.
            Assumes that ComputeSegmentsAndTypes() has been called and no plane intersections were found.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.DrawSegments(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3},Tekla.BIM.DirectManipulation.Services.Graphics.CurveType)">
            <summary>
            Draws the given segments of the box to the view.
            </summary>
            <param name="segments">The segments to draw.</param>
            <param name="curveType">The curve type to use for the segments.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.DrawFace(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.BIM.DirectManipulation.Services.Graphics.FaceType)">
            <summary>
            Draws the given points to the view as a plane. Assumes that the given edges are co-planar.
            </summary>
            <param name="points">The points that form the face.</param>
            <param name="faceType">The face type to use for the face.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ExtremaBoxDrawer.CreateUpdatedExtremaBox">
            <summary>
            Creates a new extrema box using the current extrema box and the original coordinate system of the extrema box.
            </summary>
            <returns>The new extrema box.</returns>
        </member>
        <member name="T:Tekla.Structures.Features.Common.ItemGeometryDrawer">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ItemGeometryDrawer"/> class draws the geometry specified by an <see cref="P:Tekla.Structures.Features.Common.ItemGeometryDrawer.ItemProperties"/> instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ItemGeometryDrawer.itemProperties">
            <summary>
            The properties of the item to draw.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ItemGeometryDrawer.coordinateSystem">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to draw the graphics in.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemGeometryDrawer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ItemGeometryDrawer" /> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemGeometryDrawer.CoordinateSystem">
            <summary>
            Gets or sets the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to draw the graphics in.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemGeometryDrawer.ItemProperties">
            <summary>
            Gets or sets the properties of the item to draw.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemGeometryDrawer.RemoveDrawnGeometry">
            <summary>
            Removes the drawn geometry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemGeometryDrawer.UpdateView">
            <inheritdoc />
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemGeometryDrawer.GetGeometryEdges">
            <inheritdoc />
        </member>
        <member name="T:Tekla.Structures.Features.Common.ItemProperties">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.ItemProperties"/> class is used for accessing the properties of the item being placed.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ItemProperties.itemPreview">
            <summary>
            The preview of the custom part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.ItemProperties.itemManipulator">
            <summary>
            The warehouse item manipulator.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.ItemProperties" /> class.
            </summary>
            <param name="creationCommandId">The creation command identifier.</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.Identifier">
            <summary>
            Gets the <see cref="P:Tekla.Structures.Features.Common.ItemProperties.Identifier"/> of the object in the model.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ModelObject">
            <summary>
            Gets the <see cref="P:Tekla.Structures.Features.Common.ItemProperties.ModelObject"/> in the model.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.IsValid">
            <summary>
            Gets a value indicating whether the item properties are valid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ItemGeometryFaces">
            <summary>
            Gets or sets the geometry of the warehouse item currently being placed as a collection of faces.
            Usually only one of this or <see cref="P:Tekla.Structures.Features.Common.ItemProperties.ItemGeometryEdges"/> is set for an item.
            The coordinates are relative to <see cref="P:Tekla.Structures.Features.Common.ItemProperties.ExtremaBox"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ItemGeometryEdges">
            <summary>
            Gets or sets the geometry of the warehouse item currently being placed as a collection of edges.
            Usually only one of this or <see cref="P:Tekla.Structures.Features.Common.ItemProperties.ItemGeometryFaces"/> is set for an item.
            The coordinates are relative to <see cref="P:Tekla.Structures.Features.Common.ItemProperties.ExtremaBox"/>.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ExtremaBox">
            <summary>
            Gets or sets the extrema box of the item currently being placed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ExtremaOffset">
            <summary>
            Gets or sets the offset from the extrema box to its handle.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ExtremaCoordinateSystem">
            <summary>
            Gets or sets the original coordinate system of the extrema box.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.SnappedGeometry">
            <summary>
            Gets the snapped geometry for placing the item.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.CreationCommandId">
            <summary>
            Gets the creation command identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.ModificationCommandId">
            <summary>
            Gets the modification command identifier.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.ItemProperties.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetStartPoint(Tekla.Structures.Model.ModelObject)">
            <summary>
            Gets the start point.
            </summary>
            <param name="item">The item.</param>
            <returns>The start point.</returns>
            <value>
            The start point of the item.
            </value>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.Select">
            <summary>
            Selects the currently configured properties.
            </summary>
            <returns>True if the currently configured properties can be selected; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateModelObjectPosition(System.Double)">
            <summary>
            Updates the model object location and position based on the preview properties.
            </summary>
            <param name="length">The length between two input points.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateModelObject(System.Func{System.Boolean})">
            <summary>
            Updates the model object in the model with the specified action, e.g., to insert the model object to the model,
            or to modify the model object in the model.
            </summary>
            <param name="updateAction">The update action.</param>
            <returns>
            True if the updating action was done successfully, otherwise false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.InsertItem">
            <summary>
            Inserts the item into the model.
            </summary>
            <returns>True if the item was inserted successfully, otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.ModifyItem">
            <summary>
            Modifies the item which is in the model.
            </summary>
            <returns>True if the item was modified successfully, otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.Commit(System.Boolean)">
            <summary>
            Commits the changes.
            </summary>
            <param name="insertingItem">A value indicating whether the change originating from inserting the item.</param>
            <returns>True on success; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.HideModelObject">
            <summary>
            Hides the model object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UnhideModelObject">
            <summary>
            Unhides the model object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetUpdatedPreview(Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Gets the updated preview.
            </summary>
            <param name="manipulatorManager">The manipulator manager.</param>
            <returns>
            The updated <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview" />.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.Update(Tekla.Structures.Identifier,Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Gets the updated preview using the given custom part.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="manipulatorManager">The manipulator manager.</param>
            <returns>
            The updated <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview" />.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetSnappedGeometry">
            <summary>
            Gets the snapped geometry of the item.
            </summary>
            <returns>The snapped geometry of the item.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.SetSnappedGeometry(Tekla.Structures.Model.ModelObject,Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3[])">
            <summary>
            Sets the snapped geometry.
            </summary>
            <param name="snappedObject">The snapped model object.</param>
            <param name="offsetPlane">The offset plane.</param>
            <param name="snappedEdges">The snapped edges.</param>
            <returns>True if the snapped geometry could be set; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetItemCoordinateSystem">
            <summary>
            Gets the item's coordinate system.
            </summary>
            <returns>
            The <see cref="T:Tekla.Structures.Geometry3d.CoordinateSystem" /> of the item.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.SelectPreviewExtremaBase(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Structures.Model.Position,Tekla.Structures.Features.Common.InputPointType)">
            <summary>
            Selects the preview extrema base.
            </summary>
            <param name="minPoint">The minimum point.</param>
            <param name="maxPoint">The maximum point.</param>
            <param name="position">The position.</param>
            <param name="pointType">The type of the point.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetCurrentInsertionPlane">
            <summary>
            Gets the current insertion plane.
            </summary>
            <returns>The insertion plane.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateTargetBase(Tekla.Structures.Model.ModelObject,Tekla.Structures.Features.Common.InputPointType)">
            <summary>
            Updates the target base.
            </summary>
            <param name="item">The item.</param>
            <param name="pointType">Type of the point.</param>
            <returns><c>true</c>, if succeeds, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateTarget(Tekla.Structures.Identifier)">
            <summary>
            Updates the target object with the specified <paramref name="identifier" />.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns><c>true</c> on success; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.SetItem(Tekla.Structures.Model.ModelObject)">
            <summary>
            Sets the item.
            </summary>
            <param name="newItem">The item.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetSnappedGeometryInModel">
            <summary>
            Gets the snapped geometry of the item.
            </summary>
            <returns>The snapped geometry of the item.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateSnappedGeometryInModel(Tekla.Structures.Model.ModelObject,Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3[])">
            <summary>
            Sets the snapped geometry of the item.
            </summary>
            <param name="snappedObject">The snapped model object.</param>
            <param name="offsetPlane">The offset plane.</param>
            <param name="snappedEdges">The snapped edges.</param>
            <returns>True if the snapped geometry could be set; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.GetAdjustPositionString">
            <summary>
            Gets the correct status bar message to display when adjusting the position for item/custom part.
            </summary>
            <returns>The adjust position message.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.ItemProperties.UpdateItemPreviewAndItemManipulator(Tekla.BIM.DirectManipulation.Services.Manipulators.IManipulatorService)">
            <summary>
            Updates the current <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/>.
            </summary>
            <param name="manipulatorManager">The manipulator manager.</param>
        </member>
        <member name="T:Tekla.Structures.Features.Common.SnappedGeometry">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.SnappedGeometry"/> class stores the snapped geometry data for placing a warehouse item.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.SnappedGeometry.#ctor(Tekla.Structures.Model.ModelObject,System.Nullable{Tekla.Common.Geometry.Plane3},Tekla.Common.Geometry.Segment3[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.SnappedGeometry"/> class.
            </summary>
            <param name="snappedObject">The snapped model object.</param>
            <param name="offsetPlane">The offset plane.</param>
            <param name="referenceEdges">The reference edges.</param>
        </member>
        <member name="M:Tekla.Structures.Features.Common.SnappedGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.SnappedGeometry"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.SnappedGeometry.SnappedObject">
            <summary>
            Gets or sets the snapped model object.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.SnappedGeometry.OffsetPlane">
            <summary>
            Gets or sets the offset plane.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.SnappedGeometry.ReferenceEdges">
            <summary>
            Gets or sets the reference edges.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Features.Common.PlacingItemPreview">
            <summary>
            The <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/> class handles the placing and showing of the previews of warehouse items. 
            Finds the location based on toleration event arguments and draws the preview if a valid position is found.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlacingItemPreview.extremaBoxDrawer">
            <summary>
            The extrema drawer for this preview.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlacingItemPreview.geometryDrawer">
            <summary>
            The geometry drawer for this preview.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlacingItemPreview.itemProperties">
            <summary>
            The properties of the item being placed.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlacingItemPreview.isModelObjectHidden">
            <summary>
            Indicates if the model object is hidden from the view.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Features.Common.PlacingItemPreview.snappedGeometry">
            <summary>
            The snapped geometry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.#ctor(Tekla.Structures.Features.Common.ItemProperties,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Features.Common.PlacingItemPreview"/> class.
            </summary>
            <param name="itemProperties">The properties of the item to place.</param>
            <param name="useOffsetPlaneGraphics">The value to indicate whether the offset plane graphics should be used</param>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.IsValidPreview">
            <summary>
            Gets a value indicating whether the preview is currently drawn to a valid location.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.CoordinateSystem">
            <summary>
            Gets or sets the local <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> of the item.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.ExtremaBox">
            <summary>
            Gets the extrema box of the item.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.OffsetPlane">
            <summary>
            Gets or sets the plane to which the extrema box is offset.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.OffsetPlaneLocked">
            <summary>
            Gets or sets a value indicating whether <see cref="P:Tekla.Structures.Features.Common.PlacingItemPreview.OffsetPlane"/> is locked.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.SnappedGeometry">
            <summary>
            Gets or sets the snapped geometry.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Features.Common.PlacingItemPreview.ItemProperties">
            <summary>
            Gets or sets the properties of the item being placed.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.InsertItemIntoModel(System.Double)">
            <summary>
            Inserts the warehouse item into the TS model.
            </summary>
            <param name="length">The length between two input points.</param>
            <returns>
            True if the insertion was successful, otherwise false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.ModifyItemInModel">
            <summary>
            Modifies the warehouse item in the TS model.
            </summary>
            <returns>True if the modification was successful, otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.HideItemGeometry">
            <summary>
            Hides the preview.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.HideModelObject">
            <summary>
            Hides the model object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.UnhideModelObject">
            <summary>
            Unhides the model object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.OnModifyModelObject">
            <summary>
            Called when the model object is being modified.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.UpdateExtremaBoxGraphics">
            <summary>
            Updates the graphics for the extrema box.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.UpdateGeometryGraphics">
            <summary>
            Updates the graphics for the item geometry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.UpdateSnappedGeometry">
            <summary>
            Updates the snapped geometry based on the current item preview's location.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.OnInitialize">
            <summary>
            Initializes the preview.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Features.Common.PlacingItemPreview.UpdateView">
            <summary>
            Updates the preview.
            </summary>
        </member>
    </members>
</doc>
